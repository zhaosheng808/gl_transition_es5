!function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}var t={};r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="",r(r.s=5)}([function(e,r){function t(e,r,t){this.shortMessage=r||"",this.longMessage=t||"",this.rawError=e||"",this.message="gl-shader: "+(r||e||"")+(t?"\n"+t:""),this.stack=(new Error).stack}t.prototype=new Error,t.prototype.name="GLError",t.prototype.constructor=t,e.exports=t},function(e,r,t){"use strict";function n(e,r){for(var t={},n=0;n<e.length;++n)for(var o=e[n].name,a=o.split("."),s=t,i=0;i<a.length;++i){var u=a[i].split("[");if(u.length>1){u[0]in s||(s[u[0]]=[]),s=s[u[0]];for(var l=1;l<u.length;++l){var c=parseInt(u[l]);l<u.length-1||i<a.length-1?(c in s||(l<u.length-1?s[c]=[]:s[c]={}),s=s[c]):s[c]=r?n:e[n].type}}else i<a.length-1?(u[0]in s||(s[u[0]]={}),s=s[u[0]]):s[u[0]]=r?n:e[n].type}return t}e.exports=n},function(e,r){e.exports=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"]},function(e,r){e.exports=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"]},function(e,r){var t;t=function(){return this}();try{t=t||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(t=window)}e.exports=t},function(e,r,t){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}var o=t(6),a=n(o),s=t(7),i=n(s),u=t(30),l=n(u);window.gl_transition={transitions:a.default,createTransition:i.default,createTexture:l.default}},function(e,r){e.exports=[{name:"ButterflyWaveScrawler",paramsTypes:{amplitude:"float",waves:"float",colorSeparation:"float"},defaultParams:{amplitude:1,waves:30,colorSeparation:.3},glsl:"// Author: mandubian\n// License: MIT\nuniform float amplitude; // = 1.0\nuniform float waves; // = 30.0\nuniform float colorSeparation; // = 0.3\nfloat PI = 3.14159265358979323846264;\nfloat compute(vec2 p, float progress, vec2 center) {\nvec2 o = p*sin(progress * amplitude)-center;\n// horizontal vector\nvec2 h = vec2(1., 0.);\n// butterfly polar function (don't ask me why this one :))\nfloat theta = acos(dot(o, h)) * waves;\nreturn (exp(cos(theta)) - 2.*cos(4.*theta) + pow(sin((2.*theta - PI) / 24.), 5.)) / 10.;\n}\nvec4 transition(vec2 uv) {\n  vec2 p = uv.xy / vec2(1.0).xy;\n  float inv = 1. - progress;\n  vec2 dir = p - vec2(.5);\n  float dist = length(dir);\n  float disp = compute(p, progress, vec2(0.5, 0.5)) ;\n  vec4 texTo = getToColor(p + inv*disp);\n  vec4 texFrom = vec4(\n  getFromColor(p + progress*disp*(1.0 - colorSeparation)).r,\n  getFromColor(p + progress*disp).g,\n  getFromColor(p + progress*disp*(1.0 + colorSeparation)).b,\n  1.0);\n  return texTo*progress + texFrom*inv;\n}\n",author:"mandubian",license:"MIT",createdAt:"Thu, 1 Jun 2017 11:47:17 +0200",updatedAt:"Thu, 1 Jun 2017 11:47:17 +0200"},{name:"CircleCrop",paramsTypes:{bgcolor:"vec4"},defaultParams:{bgcolor:[0,0,0,1]},glsl:"// License: MIT\n// Author: fkuteken\n// ported by gre from https://gist.github.com/fkuteken/f63e3009c1143950dee9063c3b83fb88\n\nuniform vec4 bgcolor; // = vec4(0.0, 0.0, 0.0, 1.0)\n\nvec2 ratio2 = vec2(1.0, 1.0 / ratio);\nfloat s = pow(2.0 * abs(progress - 0.5), 3.0);\n\nvec4 transition(vec2 p) {\n  float dist = length((vec2(p) - 0.5) * ratio2);\n  return mix(\n    progress < 0.5 ? getFromColor(p) : getToColor(p), // branching is ok here as we statically depend on progress uniform (branching won't change over pixels)\n    bgcolor,\n    step(s, dist)\n  );\n}\n",license:"MIT",author:"fkuteken",createdAt:"Mon, 12 Jun 2017 12:52:34 +0800",updatedAt:"Mon, 12 Jun 2017 12:52:34 +0800"},{name:"ColourDistance",paramsTypes:{power:"float"},defaultParams:{power:5},glsl:"// License: MIT\n// Author: P-Seebauer\n// ported by gre from https://gist.github.com/P-Seebauer/2a5fa2f77c883dd661f9\n\nuniform float power; // = 5.0\n\nvec4 transition(vec2 p) {\n  vec4 fTex = getFromColor(p);\n  vec4 tTex = getToColor(p);\n  float m = step(distance(fTex, tTex), progress);\n  return mix(\n    mix(fTex, tTex, m),\n    tTex,\n    pow(progress, power)\n  );\n}\n",license:"MIT",author:"P-Seebauer",createdAt:"Mon, 12 Jun 2017 12:57:42 +0800",updatedAt:"Mon, 12 Jun 2017 12:57:42 +0800"},{name:"CrazyParametricFun",paramsTypes:{a:"float",b:"float",amplitude:"float",smoothness:"float"},defaultParams:{a:4,b:1,amplitude:120,smoothness:.1},glsl:"// Author: mandubian\n// License: MIT\n\nuniform float a; // = 4\nuniform float b; // = 1\nuniform float amplitude; // = 120\nuniform float smoothness; // = 0.1\n\nvec4 transition(vec2 uv) {\n  vec2 p = uv.xy / vec2(1.0).xy;\n  vec2 dir = p - vec2(.5);\n  float dist = length(dir);\n  float x = (a - b) * cos(progress) + b * cos(progress * ((a / b) - 1.) );\n  float y = (a - b) * sin(progress) - b * sin(progress * ((a / b) - 1.));\n  vec2 offset = dir * vec2(sin(progress  * dist * amplitude * x), sin(progress * dist * amplitude * y)) / smoothness;\n  return mix(getFromColor(p + offset), getToColor(p), smoothstep(0.2, 1.0, progress));\n}\n",author:"mandubian",license:"MIT",createdAt:"Thu, 1 Jun 2017 13:03:12 +0200",updatedAt:"Thu, 1 Jun 2017 13:03:12 +0200"},{name:"CrossZoom",paramsTypes:{strength:"float"},defaultParams:{strength:.4},glsl:"// License: MIT\n// Author: rectalogic\n// ported by gre from https://gist.github.com/rectalogic/b86b90161503a0023231\n\n// Converted from https://github.com/rectalogic/rendermix-basic-effects/blob/master/assets/com/rendermix/CrossZoom/CrossZoom.frag\n// Which is based on https://github.com/evanw/glfx.js/blob/master/src/filters/blur/zoomblur.js\n// With additional easing functions from https://github.com/rectalogic/rendermix-basic-effects/blob/master/assets/com/rendermix/Easing/Easing.glsllib\n\nuniform float strength; // = 0.4\n\nconst float PI = 3.141592653589793;\n\nfloat Linear_ease(in float begin, in float change, in float duration, in float time) {\n    return change * time / duration + begin;\n}\n\nfloat Exponential_easeInOut(in float begin, in float change, in float duration, in float time) {\n    if (time == 0.0)\n        return begin;\n    else if (time == duration)\n        return begin + change;\n    time = time / (duration / 2.0);\n    if (time < 1.0)\n        return change / 2.0 * pow(2.0, 10.0 * (time - 1.0)) + begin;\n    return change / 2.0 * (-pow(2.0, -10.0 * (time - 1.0)) + 2.0) + begin;\n}\n\nfloat Sinusoidal_easeInOut(in float begin, in float change, in float duration, in float time) {\n    return -change / 2.0 * (cos(PI * time / duration) - 1.0) + begin;\n}\n\nfloat rand (vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec3 crossFade(in vec2 uv, in float dissolve) {\n    return mix(getFromColor(uv).rgb, getToColor(uv).rgb, dissolve);\n}\n\nvec4 transition(vec2 uv) {\n    vec2 texCoord = uv.xy / vec2(1.0).xy;\n\n    // Linear interpolate center across center half of the image\n    vec2 center = vec2(Linear_ease(0.25, 0.5, 1.0, progress), 0.5);\n    float dissolve = Exponential_easeInOut(0.0, 1.0, 1.0, progress);\n\n    // Mirrored sinusoidal loop. 0->strength then strength->0\n    float strength = Sinusoidal_easeInOut(0.0, strength, 0.5, progress);\n\n    vec3 color = vec3(0.0);\n    float total = 0.0;\n    vec2 toCenter = center - texCoord;\n\n    /* randomize the lookup values to hide the fixed number of samples */\n    float offset = rand(uv);\n\n    for (float t = 0.0; t <= 40.0; t++) {\n        float percent = (t + offset) / 40.0;\n        float weight = 4.0 * (percent - percent * percent);\n        color += crossFade(texCoord + toCenter * percent * strength, dissolve) * weight;\n        total += weight;\n    }\n    return vec4(color / total, 1.0);\n}\n",license:"MIT",author:"rectalogic",createdAt:"Mon, 12 Jun 2017 12:33:07 +0800",updatedAt:"Mon, 12 Jun 2017 12:33:07 +0800"},{name:"DoomScreenTransition",paramsTypes:{bars:"int",amplitude:"float",noise:"float",frequency:"float",dripScale:"float"},defaultParams:{bars:30,amplitude:2,noise:.1,frequency:.5,dripScale:.5},glsl:'// Author: Zeh Fernando\n// License: MIT\n\n\n// Transition parameters --------\n\n// Number of total bars/columns\nuniform int bars; // = 30\n\n// Multiplier for speed ratio. 0 = no variation when going down, higher = some elements go much faster\nuniform float amplitude; // = 2\n\n// Further variations in speed. 0 = no noise, 1 = super noisy (ignore frequency)\nuniform float noise; // = 0.1\n\n// Speed variation horizontally. the bigger the value, the shorter the waves\nuniform float frequency; // = 0.5\n\n// How much the bars seem to "run" from the middle of the screen first (sticking to the sides). 0 = no drip, 1 = curved drip\nuniform float dripScale; // = 0.5\n\n\n// The code proper --------\n\nfloat rand(int num) {\n  return fract(mod(float(num) * 67123.313, 12.0) * sin(float(num) * 10.3) * cos(float(num)));\n}\n\nfloat wave(int num) {\n  float fn = float(num) * frequency * 0.1 * float(bars);\n  return cos(fn * 0.5) * cos(fn * 0.13) * sin((fn+10.0) * 0.3) / 2.0 + 0.5;\n}\n\nfloat drip(int num) {\n  return sin(float(num) / float(bars - 1) * 3.141592) * dripScale;\n}\n\nfloat pos(int num) {\n  return (noise == 0.0 ? wave(num) : mix(wave(num), rand(num), noise)) + (dripScale == 0.0 ? 0.0 : drip(num));\n}\n\nvec4 transition(vec2 uv) {\n  int bar = int(uv.x * (float(bars)));\n  float scale = 1.0 + pos(bar) * amplitude;\n  float phase = progress * scale;\n  float posY = uv.y / vec2(1.0).y;\n  vec2 p;\n  vec4 c;\n  if (phase + posY < 1.0) {\n    p = vec2(uv.x, uv.y + mix(0.0, vec2(1.0).y, phase)) / vec2(1.0).xy;\n    c = getFromColor(p);\n  } else {\n    p = uv.xy / vec2(1.0).xy;\n    c = getToColor(p);\n  }\n\n  // Finally, apply the color\n  return c;\n}\n',author:"Zeh Fernando",license:"MIT",createdAt:"Tue, 30 May 2017 09:39:09 -0700",updatedAt:"Tue, 30 May 2017 09:39:09 -0700"},{name:"Dreamy",paramsTypes:{},defaultParams:{},glsl:"// Author: mikolalysenko\n// License: MIT\n\nvec2 offset(float progress, float x, float theta) {\n  float phase = progress*progress + progress + theta;\n  float shifty = 0.03*progress*cos(10.0*(progress+x));\n  return vec2(0, shifty);\n}\nvec4 transition(vec2 p) {\n  return mix(getFromColor(p + offset(progress, p.x, 0.0)), getToColor(p + offset(1.0-progress, p.x, 3.14)), progress);\n}\n",author:"mikolalysenko",license:"MIT",createdAt:"Mon, 12 Jun 2017 12:27:38 +0800",updatedAt:"Mon, 12 Jun 2017 12:27:38 +0800"},{name:"DreamyZoom",paramsTypes:{rotation:"float",scale:"float"},defaultParams:{rotation:6,scale:1.2},glsl:"// Author: Zeh Fernando\n// License: MIT\n\n// Definitions --------\n#define DEG2RAD 0.03926990816987241548078304229099 // 1/180*PI\n\n\n// Transition parameters --------\n\n// In degrees\nuniform float rotation; // = 6\n\n// Multiplier\nuniform float scale; // = 1.2\n\n\n// The code proper --------\n\nvec4 transition(vec2 uv) {\n  // Massage parameters\n  float phase = progress < 0.5 ? progress * 2.0 : (progress - 0.5) * 2.0;\n  float angleOffset = progress < 0.5 ? mix(0.0, rotation * DEG2RAD, phase) : mix(-rotation * DEG2RAD, 0.0, phase);\n  float newScale = progress < 0.5 ? mix(1.0, scale, phase) : mix(scale, 1.0, phase);\n  \n  vec2 center = vec2(0, 0);\n\n  // Calculate the source point\n  vec2 assumedCenter = vec2(0.5, 0.5);\n  vec2 p = (uv.xy - vec2(0.5, 0.5)) / newScale * vec2(ratio, 1.0);\n\n  // This can probably be optimized (with distance())\n  float angle = atan(p.y, p.x) + angleOffset;\n  float dist = distance(center, p);\n  p.x = cos(angle) * dist / ratio + 0.5;\n  p.y = sin(angle) * dist + 0.5;\n  vec4 c = progress < 0.5 ? getFromColor(p) : getToColor(p);\n\n  // Finally, apply the color\n  return c + (progress < 0.5 ? mix(0.0, 1.0, phase) : mix(1.0, 0.0, phase));\n}\n",author:"Zeh Fernando",license:"MIT",createdAt:"Tue, 30 May 2017 10:44:06 -0700",updatedAt:"Tue, 30 May 2017 10:44:06 -0700"},{name:"GlitchDisplace",paramsTypes:{},defaultParams:{},glsl:"// Author: Matt DesLauriers\n// License: MIT\n\nhighp float random(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\nfloat voronoi( in vec2 x ) {\n    vec2 p = floor( x );\n    vec2 f = fract( x );\n    float res = 8.0;\n    for( float j=-1.; j<=1.; j++ )\n    for( float i=-1.; i<=1.; i++ ) {\n        vec2  b = vec2( i, j );\n        vec2  r = b - f + random( p + b );\n        float d = dot( r, r );\n        res = min( res, d );\n    }\n    return sqrt( res );\n}\n\nvec2 displace(vec4 tex, vec2 texCoord, float dotDepth, float textureDepth, float strength) {\n    float b = voronoi(.003 * texCoord + 2.0);\n    float g = voronoi(0.2 * texCoord);\n    float r = voronoi(texCoord - 1.0);\n    vec4 dt = tex * 1.0;\n    vec4 dis = dt * dotDepth + 1.0 - tex * textureDepth;\n\n    dis.x = dis.x - 1.0 + textureDepth*dotDepth;\n    dis.y = dis.y - 1.0 + textureDepth*dotDepth;\n    dis.x *= strength;\n    dis.y *= strength;\n    vec2 res_uv = texCoord ;\n    res_uv.x = res_uv.x + dis.x - 0.0;\n    res_uv.y = res_uv.y + dis.y;\n    return res_uv;\n}\n\nfloat ease1(float t) {\n  return t == 0.0 || t == 1.0\n    ? t\n    : t < 0.5\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\n}\nfloat ease2(float t) {\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\n}\n\n\n\nvec4 transition(vec2 uv) {\n  vec2 p = uv.xy / vec2(1.0).xy;\n  vec4 color1 = getFromColor(p);\n  vec4 color2 = getToColor(p);\n  vec2 disp = displace(color1, p, 0.33, 0.7, 1.0-ease1(progress));\n  vec2 disp2 = displace(color2, p, 0.33, 0.5, ease2(progress));\n  vec4 dColor1 = getToColor(disp);\n  vec4 dColor2 = getFromColor(disp2);\n  float val = ease1(progress);\n  vec3 gray = vec3(dot(min(dColor2, dColor1).rgb, vec3(0.299, 0.587, 0.114)));\n  dColor2 = vec4(gray, 1.0);\n  dColor2 *= 2.0;\n  color1 = mix(color1, dColor2, smoothstep(0.0, 0.5, progress));\n  color2 = mix(color2, dColor1, smoothstep(1.0, 0.5, progress));\n  return mix(color1, color2, val);\n  //gl_FragColor = mix(gl_FragColor, dColor, smoothstep(0.0, 0.5, progress));\n  \n   //gl_FragColor = mix(texture2D(from, p), texture2D(to, p), progress);\n}\n",author:"Matt DesLauriers",license:"MIT",createdAt:"Tue, 30 May 2017 14:53:04 -0400",updatedAt:"Tue, 30 May 2017 14:53:04 -0400"},{name:"GridFlip",paramsTypes:{size:"ivec2",pause:"float",dividerWidth:"float",bgcolor:"vec4",randomness:"float"},defaultParams:{size:[4,4],pause:.1,dividerWidth:.05,bgcolor:[0,0,0,1],randomness:.1},glsl:"// License: MIT\n// Author: TimDonselaar\n// ported by gre from https://gist.github.com/TimDonselaar/9bcd1c4b5934ba60087bdb55c2ea92e5\n\nuniform ivec2 size; // = ivec2(4)\nuniform float pause; // = 0.1\nuniform float dividerWidth; // = 0.05\nuniform vec4 bgcolor; // = vec4(0.0, 0.0, 0.0, 1.0)\nuniform float randomness; // = 0.1\n \nfloat rand (vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat getDelta(vec2 p) {\n  vec2 rectanglePos = floor(vec2(size) * p);\n  vec2 rectangleSize = vec2(1.0 / vec2(size).x, 1.0 / vec2(size).y);\n  float top = rectangleSize.y * (rectanglePos.y + 1.0);\n  float bottom = rectangleSize.y * rectanglePos.y;\n  float left = rectangleSize.x * rectanglePos.x;\n  float right = rectangleSize.x * (rectanglePos.x + 1.0);\n  float minX = min(abs(p.x - left), abs(p.x - right));\n  float minY = min(abs(p.y - top), abs(p.y - bottom));\n  return min(minX, minY);\n}\n\nfloat getDividerSize() {\n  vec2 rectangleSize = vec2(1.0 / vec2(size).x, 1.0 / vec2(size).y);\n  return min(rectangleSize.x, rectangleSize.y) * dividerWidth;\n}\n\nvec4 transition(vec2 p) {\n  if(progress < pause) {\n    float currentProg = progress / pause;\n    float a = 1.0;\n    if(getDelta(p) < getDividerSize()) {\n      a = 1.0 - currentProg;\n    }\n    return mix(bgcolor, getFromColor(p), a);\n  }\n  else if(progress < 1.0 - pause){\n    if(getDelta(p) < getDividerSize()) {\n      return bgcolor;\n    } else {\n      float currentProg = (progress - pause) / (1.0 - pause * 2.0);\n      vec2 q = p;\n      vec2 rectanglePos = floor(vec2(size) * q);\n      \n      float r = rand(rectanglePos) - randomness;\n      float cp = smoothstep(0.0, 1.0 - r, currentProg);\n    \n      float rectangleSize = 1.0 / vec2(size).x;\n      float delta = rectanglePos.x * rectangleSize;\n      float offset = rectangleSize / 2.0 + delta;\n      \n      p.x = (p.x - offset)/abs(cp - 0.5)*0.5 + offset;\n      vec4 a = getFromColor(p);\n      vec4 b = getToColor(p);\n      \n      float s = step(abs(vec2(size).x * (q.x - delta) - 0.5), abs(cp - 0.5));\n      return mix(bgcolor, mix(b, a, step(cp, 0.5)), s);\n    }\n  }\n  else {\n    float currentProg = (progress - 1.0 + pause) / pause;\n    float a = 1.0;\n    if(getDelta(p) < getDividerSize()) {\n      a = currentProg;\n    }\n    return mix(bgcolor, getToColor(p), a);\n  }\n}\n",license:"MIT",author:"TimDonselaar",createdAt:"Mon, 12 Jun 2017 11:32:51 +0800",updatedAt:"Mon, 12 Jun 2017 11:32:51 +0800"},{name:"Mosaic",paramsTypes:{endx:"int",endy:"int"},defaultParams:{endx:2,endy:-1},glsl:"// License: MIT\n// Author: Xaychru\n// ported by gre from https://gist.github.com/Xaychru/130bb7b7affedbda9df5\n\n#define PI 3.14159265358979323\n#define POW2(X) X*X\n#define POW3(X) X*X*X\nuniform int endx; // = 2\nuniform int endy; // = -1\n\nfloat Rand(vec2 v) {\n  return fract(sin(dot(v.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvec2 Rotate(vec2 v, float a) {\n  mat2 rm = mat2(cos(a), -sin(a),\n                 sin(a), cos(a));\n  return rm*v;\n}\nfloat CosInterpolation(float x) {\n  return -cos(x*PI)/2.+.5;\n}\nvec4 transition(vec2 uv) {\n  vec2 p = uv.xy / vec2(1.0).xy - .5;\n  vec2 rp = p;\n  float rpr = (progress*2.-1.);\n  float z = -(rpr*rpr*2.) + 3.;\n  float az = abs(z);\n  rp *= az;\n  rp += mix(vec2(.5, .5), vec2(float(endx) + .5, float(endy) + .5), POW2(CosInterpolation(progress)));\n  vec2 mrp = mod(rp, 1.);\n  vec2 crp = rp;\n  bool onEnd = int(floor(crp.x))==endx&&int(floor(crp.y))==endy;\n  if(!onEnd) {\n    float ang = float(int(Rand(floor(crp))*4.))*.5*PI;\n    mrp = vec2(.5) + Rotate(mrp-vec2(.5), ang);\n  }\n  if(onEnd || Rand(floor(crp))>.5) {\n    return getToColor(mrp);\n  } else {\n    return getFromColor(mrp);\n  }\n}\n",license:"MIT",author:"Xaychru",createdAt:"Mon, 12 Jun 2017 10:26:51 +0800",updatedAt:"Mon, 12 Jun 2017 10:26:51 +0800"},{name:"Radial",paramsTypes:{smoothness:"float"},defaultParams:{smoothness:1},glsl:"// License: MIT\n// Author: Xaychru\n// ported by gre from https://gist.github.com/Xaychru/ce1d48f0ce00bb379750\n\nuniform float smoothness; // = 1.0\n\nconst float PI = 3.141592653589;\n\nvec4 transition(vec2 p) {\n  vec2 rp = p*2.-1.;\n  return mix(\n    getToColor(p),\n    getFromColor(p),\n    smoothstep(0., smoothness, atan(rp.y,rp.x) - (progress-.5) * PI * 2.5)\n  );\n}\n",license:"MIT",author:"Xaychru",createdAt:"Mon, 12 Jun 2017 10:36:24 +0800",updatedAt:"Mon, 12 Jun 2017 10:36:24 +0800"},{name:"Swirl",paramsTypes:{},defaultParams:{},glsl:"// License: MIT\n// Author: Sergey Kosarevsky\n// ( http://www.linderdaum.com )\n// ported by gre from https://gist.github.com/corporateshark/cacfedb8cca0f5ce3f7c\n\nvec4 transition(vec2 UV)\n{\n\tfloat Radius = 1.0;\n\n\tfloat T = progress;\n\n\tUV -= vec2( 0.5, 0.5 );\n\n\tfloat Dist = length(UV);\n\n\tif ( Dist < Radius )\n\t{\n\t\tfloat Percent = (Radius - Dist) / Radius;\n\t\tfloat A = ( T <= 0.5 ) ? mix( 0.0, 1.0, T/0.5 ) : mix( 1.0, 0.0, (T-0.5)/0.5 );\n\t\tfloat Theta = Percent * Percent * A * 8.0 * 3.14159;\n\t\tfloat S = sin( Theta );\n\t\tfloat C = cos( Theta );\n\t\tUV = vec2( dot(UV, vec2(C, -S)), dot(UV, vec2(S, C)) );\n\t}\n\tUV += vec2( 0.5, 0.5 );\n\n\tvec4 C0 = getFromColor(UV);\n\tvec4 C1 = getToColor(UV);\n\n\treturn mix( C0, C1, T );\n}\n",license:"MIT",author:"Sergey Kosarevsky",createdAt:"Mon, 12 Jun 2017 12:38:27 +0800",updatedAt:"Mon, 12 Jun 2017 12:38:27 +0800"},{name:"ZoomInCircles",paramsTypes:{},defaultParams:{},glsl:"// License: MIT\n// Author: dycm8009\n// ported by gre from https://gist.github.com/dycm8009/948e99b1800e81ad909a\n\nvec2 zoom(vec2 uv, float amount) {\n  return 0.5 + ((uv - 0.5) * amount);\t\n}\n\nvec2 ratio2 = vec2(1.0, 1.0 / ratio);\n\nvec4 transition(vec2 uv) {\n  // TODO: some timing are hardcoded but should be one or many parameters\n  // TODO: should also be able to configure how much circles\n  // TODO: if() branching should be avoided when possible, prefer use of step() & other functions\n  vec2 r = 2.0 * ((vec2(uv.xy) - 0.5) * ratio2);\n  float pro = progress / 0.8;\n  float z = pro * 0.2;\n  float t = 0.0;\n  if (pro > 1.0) {\n    z = 0.2 + (pro - 1.0) * 5.;\n    t = clamp((progress - 0.8) / 0.07, 0.0, 1.0);\n  }\n  if (length(r) < 0.5+z) {\n    // uv = zoom(uv, 0.9 - 0.1 * pro);\n  }\n  else if (length(r) < 0.8+z*1.5) {\n    uv = zoom(uv, 1.0 - 0.15 * pro);\n    t = t * 0.5;\n  }\n  else if (length(r) < 1.2+z*2.5) {\n    uv = zoom(uv, 1.0 - 0.2 * pro);\n    t = t * 0.2;\n  }\n  else {\n    uv = zoom(uv, 1.0 - 0.25 * pro);\n  }\n  return mix(getFromColor(uv), getToColor(uv), t);\n}\n",license:"MIT",author:"dycm8009",createdAt:"Mon, 12 Jun 2017 11:24:34 +0800",updatedAt:"Mon, 12 Jun 2017 11:24:34 +0800"},{name:"angular",paramsTypes:{startingAngle:"float"},defaultParams:{startingAngle:90},glsl:"// Author: Fernando Kuteken\n// License: MIT\n\n#define PI 3.141592653589\n\nuniform float startingAngle; // = 90;\n\nvec4 transition (vec2 uv) {\n  \n  float offset = startingAngle * PI / 180.0;\n  float angle = atan(uv.y - 0.5, uv.x - 0.5) + offset;\n  float normalizedAngle = (angle + PI) / (2.0 * PI);\n  \n  normalizedAngle = normalizedAngle - floor(normalizedAngle);\n\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    step(normalizedAngle, progress)\n    );\n}\n",author:"Fernando Kuteken",license:"MIT",createdAt:"Sun, 28 May 2017 18:30:24 -0300",updatedAt:"Mon, 29 May 2017 18:53:55 -0300"},{name:"burn",paramsTypes:{color:"vec3"},defaultParams:{color:[.9,.4,.2]},glsl:"// author: gre\n// License: MIT\nuniform vec3 color /* = vec3(0.9, 0.4, 0.2) */;\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv) + vec4(progress*color, 1.0),\n    getToColor(uv) + vec4((1.0-progress)*color, 1.0),\n    progress\n  );\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"cannabisleaf",paramsTypes:{},defaultParams:{},glsl:"// Author: @Flexi23\n// License: MIT\n\n// inspired by http://www.wolframalpha.com/input/?i=cannabis+curve\n\nvec4 transition (vec2 uv) {\n  if(progress == 0.0){\n    return getFromColor(uv);\n  }\n  vec2 leaf_uv = (uv - vec2(0.5))/10./pow(progress,3.5);\n\tleaf_uv.y += 0.35;\n\tfloat r = 0.18;\n\tfloat o = atan(leaf_uv.y, leaf_uv.x);\n  return mix(getFromColor(uv), getToColor(uv), 1.-step(1. - length(leaf_uv)+r*(1.+sin(o))*(1.+0.9 * cos(8.*o))*(1.+0.1*cos(24.*o))*(0.9+0.05*cos(200.*o)), 1.));\n}\n",author:"@Flexi23",license:"MIT",createdAt:"Thu, 1 Jun 2017 15:58:58 +0200",updatedAt:"Thu, 1 Jun 2017 15:58:58 +0200"},{name:"circle",paramsTypes:{center:"vec2",backColor:"vec3"},defaultParams:{center:[.5,.5],backColor:[.1,.1,.1]},glsl:"// Author: Fernando Kuteken\n// License: MIT\n\nuniform vec2 center; // = vec2(0.5, 0.5);\nuniform vec3 backColor; // = vec3(0.1, 0.1, 0.1);\n\nvec4 transition (vec2 uv) {\n  \n  float distance = length(uv - center);\n  float radius = sqrt(8.0) * abs(progress - 0.5);\n  \n  if (distance > radius) {\n    return vec4(backColor, 1.0);\n  }\n  else {\n    if (progress < 0.5) return getFromColor(uv);\n    else return getToColor(uv);\n  }\n}\n",author:"Fernando Kuteken",license:"MIT",createdAt:"Sun, 28 May 2017 18:00:31 -0300",updatedAt:"Sun, 28 May 2017 18:00:31 -0300"},{name:"circleopen",paramsTypes:{smoothness:"float",opening:"bool"},defaultParams:{smoothness:.3,opening:!0},glsl:"// author: gre\n// License: MIT\nuniform float smoothness; // = 0.3\nuniform bool opening; // = true\n\nconst vec2 center = vec2(0.5, 0.5);\nconst float SQRT_2 = 1.414213562373;\n\nvec4 transition (vec2 uv) {\n  float x = opening ? progress : 1.-progress;\n  float m = smoothstep(-smoothness, 0.0, SQRT_2*distance(center, uv) - x*(1.+smoothness));\n  return mix(getFromColor(uv), getToColor(uv), opening ? 1.-m : m);\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"colorphase",paramsTypes:{fromStep:"vec4",toStep:"vec4"},defaultParams:{fromStep:[0,.2,.4,0],toStep:[.6,.8,1,1]},glsl:"// Author: gre\n// License: MIT\n\n// Usage: fromStep and toStep must be in [0.0, 1.0] range \n// and all(fromStep) must be < all(toStep)\n\nuniform vec4 fromStep; // = vec4(0.0, 0.2, 0.4, 0.0)\nuniform vec4 toStep; // = vec4(0.6, 0.8, 1.0, 1.0)\n\nvec4 transition (vec2 uv) {\n  vec4 a = getFromColor(uv);\n  vec4 b = getToColor(uv);\n  return mix(a, b, smoothstep(fromStep, toStep, vec4(progress)));\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"crosshatch",paramsTypes:{center:"vec2",threshold:"float",fadeEdge:"float"},defaultParams:{center:[.5,.5],threshold:3,fadeEdge:.1},glsl:"// License: MIT\n// Author: pthrasher\n// adapted by gre from https://gist.github.com/pthrasher/04fd9a7de4012cbb03f6\n\nuniform vec2 center; // = vec2(0.5)\nuniform float threshold; // = 3.0\nuniform float fadeEdge; // = 0.1\n\nfloat rand(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvec4 transition(vec2 p) {\n  float dist = distance(center, p) / threshold;\n  float r = progress - min(rand(vec2(p.y, 0.0)), rand(vec2(0.0, p.x)));\n  return mix(getFromColor(p), getToColor(p), mix(0.0, mix(step(dist, r), 1.0, smoothstep(1.0-fadeEdge, 1.0, progress)), smoothstep(0.0, fadeEdge, progress)));    \n}\n",license:"MIT",author:"pthrasher",createdAt:"Mon, 12 Jun 2017 10:02:12 +0800",updatedAt:"Mon, 12 Jun 2017 10:02:12 +0800"},{name:"crosswarp",paramsTypes:{},defaultParams:{},glsl:"// Author: Eke Péter <peterekepeter@gmail.com>\n// License: MIT\nvec4 transition(vec2 p) {\n  float x = progress;\n  x=smoothstep(.0,1.0,(x*2.0+p.x-1.0));\n  return mix(getFromColor((p-.5)*(1.-x)+.5), getToColor((p-.5)*x+.5), x);\n}\n",author:"Eke Péter <peterekepeter@gmail.com>",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"cube",paramsTypes:{persp:"float",unzoom:"float",reflection:"float",floating:"float"},defaultParams:{persp:.7,unzoom:.3,reflection:.4,floating:3},glsl:"// Author: gre\n// License: MIT\nuniform float persp; // = 0.7\nuniform float unzoom; // = 0.3\nuniform float reflection; // = 0.4\nuniform float floating; // = 3.0\n\nvec2 project (vec2 p) {\n  return p * vec2(1.0, -1.2) + vec2(0.0, -floating/100.);\n}\n\nbool inBounds (vec2 p) {\n  return all(lessThan(vec2(0.0), p)) && all(lessThan(p, vec2(1.0)));\n}\n\nvec4 bgColor (vec2 p, vec2 pfr, vec2 pto) {\n  vec4 c = vec4(0.0, 0.0, 0.0, 1.0);\n  pfr = project(pfr);\n  // FIXME avoid branching might help perf!\n  if (inBounds(pfr)) {\n    c += mix(vec4(0.0), getFromColor(pfr), reflection * mix(1.0, 0.0, pfr.y));\n  }\n  pto = project(pto);\n  if (inBounds(pto)) {\n    c += mix(vec4(0.0), getToColor(pto), reflection * mix(1.0, 0.0, pto.y));\n  }\n  return c;\n}\n\n// p : the position\n// persp : the perspective in [ 0, 1 ]\n// center : the xcenter in [0, 1] \\ 0.5 excluded\nvec2 xskew (vec2 p, float persp, float center) {\n  float x = mix(p.x, 1.0-p.x, center);\n  return (\n    (\n      vec2( x, (p.y - 0.5*(1.0-persp) * x) / (1.0+(persp-1.0)*x) )\n      - vec2(0.5-distance(center, 0.5), 0.0)\n    )\n    * vec2(0.5 / distance(center, 0.5) * (center<0.5 ? 1.0 : -1.0), 1.0)\n    + vec2(center<0.5 ? 0.0 : 1.0, 0.0)\n  );\n}\n\nvec4 transition(vec2 op) {\n  float uz = unzoom * 2.0*(0.5-distance(0.5, progress));\n  vec2 p = -uz*0.5+(1.0+uz) * op;\n  vec2 fromP = xskew(\n    (p - vec2(progress, 0.0)) / vec2(1.0-progress, 1.0),\n    1.0-mix(progress, 0.0, persp),\n    0.0\n  );\n  vec2 toP = xskew(\n    p / vec2(progress, 1.0),\n    mix(pow(progress, 2.0), 1.0, persp),\n    1.0\n  );\n  // FIXME avoid branching might help perf!\n  if (inBounds(fromP)) {\n    return getFromColor(fromP);\n  }\n  else if (inBounds(toP)) {\n    return getToColor(toP);\n  }\n  return bgColor(op, fromP, toP);\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 11:39:22 +0200",updatedAt:"Sat, 27 May 2017 11:39:22 +0200"},{name:"directionalwipe",paramsTypes:{direction:"vec2",smoothness:"float"},defaultParams:{direction:[1,-1],smoothness:.5},glsl:"// Author: gre\n// License: MIT\n\nuniform vec2 direction; // = vec2(1.0, -1.0)\nuniform float smoothness; // = 0.5\n \nconst vec2 center = vec2(0.5, 0.5);\n \nvec4 transition (vec2 uv) {\n  vec2 v = normalize(direction);\n  v /= abs(v.x)+abs(v.y);\n  float d = v.x * center.x + v.y * center.y;\n  float m =\n    (1.0-step(progress, 0.0)) * // there is something wrong with our formula that makes m not equals 0.0 with progress is 0.0\n    (1.0 - smoothstep(-smoothness, 0.0, v.x * uv.x + v.y * uv.y - (d-0.5+progress*(1.+smoothness))));\n  return mix(getFromColor(uv), getToColor(uv), m);\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"doorway",paramsTypes:{reflection:"float",perspective:"float",depth:"float"},defaultParams:{reflection:.4,perspective:.4,depth:3},glsl:"// author: gre\n// License: MIT \nuniform float reflection; // = 0.4\nuniform float perspective; // = 0.4\nuniform float depth; // = 3\n\nconst vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec2 boundMin = vec2(0.0, 0.0);\nconst vec2 boundMax = vec2(1.0, 1.0);\n\nbool inBounds (vec2 p) {\n  return all(lessThan(boundMin, p)) && all(lessThan(p, boundMax));\n}\n\nvec2 project (vec2 p) {\n  return p * vec2(1.0, -1.2) + vec2(0.0, -0.02);\n}\n\nvec4 bgColor (vec2 p, vec2 pto) {\n  vec4 c = black;\n  pto = project(pto);\n  if (inBounds(pto)) {\n    c += mix(black, getToColor(pto), reflection * mix(1.0, 0.0, pto.y));\n  }\n  return c;\n}\n\n\nvec4 transition (vec2 p) {\n  vec2 pfr = vec2(-1.), pto = vec2(-1.);\n  float middleSlit = 2.0 * abs(p.x-0.5) - progress;\n  if (middleSlit > 0.0) {\n    pfr = p + (p.x > 0.5 ? -1.0 : 1.0) * vec2(0.5*progress, 0.0);\n    float d = 1.0/(1.0+perspective*progress*(1.0-middleSlit));\n    pfr.y -= d/2.;\n    pfr.y *= d;\n    pfr.y += d/2.;\n  }\n  float size = mix(1.0, depth, 1.-progress);\n  pto = (p + vec2(-0.5, -0.5)) * vec2(size, size) + vec2(0.5, 0.5);\n  if (inBounds(pfr)) {\n    return getFromColor(pfr);\n  }\n  else if (inBounds(pto)) {\n    return getToColor(pto);\n  }\n  else {\n    return bgColor(p, pto);\n  }\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"fade",paramsTypes:{},defaultParams:{},glsl:"// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"fadecolor",paramsTypes:{color:"vec3",colorPhase:"float"},defaultParams:{color:[0,0,0],colorPhase:.4},glsl:"// author: gre\n// License: MIT\nuniform vec3 color;// = vec3(0.0)\nuniform float colorPhase/* = 0.4 */; // if 0.0, there is no black phase, if 0.9, the black phase is very important\nvec4 transition (vec2 uv) {\n  return mix(\n    mix(vec4(color, 1.0), getFromColor(uv), smoothstep(1.0-colorPhase, 0.0, progress)),\n    mix(vec4(color, 1.0), getToColor(uv), smoothstep(    colorPhase, 1.0, progress)),\n    progress);\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"fadegrayscale",paramsTypes:{intensity:"float"},defaultParams:{intensity:.3},glsl:"// Author: gre\n// License: MIT\n\nuniform float intensity; // = 0.3; // if 0.0, the image directly turn grayscale, if 0.9, the grayscale transition phase is very important\n \nvec3 grayscale (vec3 color) {\n  return vec3(0.2126*color.r + 0.7152*color.g + 0.0722*color.b);\n}\n \nvec4 transition (vec2 uv) {\n  vec4 fc = getFromColor(uv);\n  vec4 tc = getToColor(uv);\n  return mix(\n    mix(vec4(grayscale(fc.rgb), 1.0), fc, smoothstep(1.0-intensity, 0.0, progress)),\n    mix(vec4(grayscale(tc.rgb), 1.0), tc, smoothstep(    intensity, 1.0, progress)),\n    progress);\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"flyeye",paramsTypes:{size:"float",zoom:"float",colorSeparation:"float"},defaultParams:{size:.04,zoom:50,colorSeparation:.3},glsl:"// Author: gre\n// License: MIT\nuniform float size; // = 0.04\nuniform float zoom; // = 50.0\nuniform float colorSeparation; // = 0.3\n\nvec4 transition(vec2 p) {\n  float inv = 1. - progress;\n  vec2 disp = size*vec2(cos(zoom*p.x), sin(zoom*p.y));\n  vec4 texTo = getToColor(p + inv*disp);\n  vec4 texFrom = vec4(\n    getFromColor(p + progress*disp*(1.0 - colorSeparation)).r,\n    getFromColor(p + progress*disp).g,\n    getFromColor(p + progress*disp*(1.0 + colorSeparation)).b,\n    1.0);\n  return texTo*progress + texFrom*inv;\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"heart",paramsTypes:{},defaultParams:{},glsl:"// Author: gre\n// License: MIT\n\nfloat inHeart (vec2 p, vec2 center, float size) {\n  if (size==0.0) return 0.0;\n  vec2 o = (p-center)/(1.6*size);\n  float a = o.x*o.x+o.y*o.y-0.3;\n  return step(a*a*a, o.x*o.x*o.y*o.y*o.y);\n}\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    inHeart(uv, vec2(0.5, 0.4), progress)\n  );\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"hexagonalize",paramsTypes:{steps:"int",horizontalHexagons:"float"},defaultParams:{steps:50,horizontalHexagons:20},glsl:"// Author: Fernando Kuteken\n// License: MIT\n// Hexagonal math from: http://www.redblobgames.com/grids/hexagons/\n\nuniform int steps; // = 50;\nuniform float horizontalHexagons; //= 20;\n\nstruct Hexagon {\n  float q;\n  float r;\n  float s;\n};\n\nHexagon createHexagon(float q, float r){\n  Hexagon hex;\n  hex.q = q;\n  hex.r = r;\n  hex.s = -q - r;\n  return hex;\n}\n\nHexagon roundHexagon(Hexagon hex){\n  \n  float q = floor(hex.q + 0.5);\n  float r = floor(hex.r + 0.5);\n  float s = floor(hex.s + 0.5);\n\n  float deltaQ = abs(q - hex.q);\n  float deltaR = abs(r - hex.r);\n  float deltaS = abs(s - hex.s);\n\n  if (deltaQ > deltaR && deltaQ > deltaS)\n    q = -r - s;\n  else if (deltaR > deltaS)\n    r = -q - s;\n  else\n    s = -q - r;\n\n  return createHexagon(q, r);\n}\n\nHexagon hexagonFromPoint(vec2 point, float size) {\n  \n  point.y /= ratio;\n  point = (point - 0.5) / size;\n  \n  float q = (sqrt(3.0) / 3.0) * point.x + (-1.0 / 3.0) * point.y;\n  float r = 0.0 * point.x + 2.0 / 3.0 * point.y;\n\n  Hexagon hex = createHexagon(q, r);\n  return roundHexagon(hex);\n  \n}\n\nvec2 pointFromHexagon(Hexagon hex, float size) {\n  \n  float x = (sqrt(3.0) * hex.q + (sqrt(3.0) / 2.0) * hex.r) * size + 0.5;\n  float y = (0.0 * hex.q + (3.0 / 2.0) * hex.r) * size + 0.5;\n  \n  return vec2(x, y * ratio);\n}\n\nvec4 transition (vec2 uv) {\n  \n  float dist = 2.0 * min(progress, 1.0 - progress);\n  dist = steps > 0 ? ceil(dist * float(steps)) / float(steps) : dist;\n  \n  float size = (sqrt(3.0) / 3.0) * dist / horizontalHexagons;\n  \n  vec2 point = dist > 0.0 ? pointFromHexagon(hexagonFromPoint(uv, size), size) : uv;\n\n  return mix(getFromColor(point), getToColor(point), progress);\n  \n}\n",author:"Fernando Kuteken",license:"MIT",createdAt:"Tue, 30 May 2017 21:55:47 -0300",updatedAt:"Tue, 30 May 2017 21:55:47 -0300"},{name:"kaleidoscope",paramsTypes:{speed:"float",angle:"float",power:"float"},defaultParams:{speed:1,angle:1,power:1.5},glsl:"// Author: nwoeanhinnogaehr\n// License: MIT\n\nuniform float speed; // = 1.0;\nuniform float angle; // = 1.0;\nuniform float power; // = 1.5;\n\nvec4 transition(vec2 uv) {\n  vec2 p = uv.xy / vec2(1.0).xy;\n  vec2 q = p;\n  float t = pow(progress, power)*speed;\n  p = p -0.5;\n  for (int i = 0; i < 7; i++) {\n    p = vec2(sin(t)*p.x + cos(t)*p.y, sin(t)*p.y - cos(t)*p.x);\n    t += angle;\n    p = abs(mod(p, 2.0) - 1.0);\n  }\n  abs(mod(p, 1.0));\n  return mix(\n    mix(getFromColor(q), getToColor(q), progress),\n    mix(getFromColor(p), getToColor(p), progress), 1.0 - 2.0*abs(progress - 0.5));\n}\n",author:"nwoeanhinnogaehr",license:"MIT",createdAt:"Wed, 31 May 2017 21:48:26 -0400",updatedAt:"Wed, 31 May 2017 21:48:26 -0400"},{name:"luma",paramsTypes:{luma:"sampler2D"},defaultParams:{luma:null},glsl:"// Author: gre\n// License: MIT\n\nuniform sampler2D luma;\n\nvec4 transition(vec2 uv) {\n  return mix(\n    getToColor(uv),\n    getFromColor(uv),\n    step(progress, texture2D(luma, uv).r)\n  );\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"morph",paramsTypes:{strength:"float"},defaultParams:{strength:.1},glsl:"// Author: paniq\n// License: MIT\nuniform float strength; // = 0.1\n\nvec4 transition(vec2 p) {\n  vec4 ca = getFromColor(p);\n  vec4 cb = getToColor(p);\n  \n  vec2 oa = (((ca.rg+ca.b)*0.5)*2.0-1.0);\n  vec2 ob = (((cb.rg+cb.b)*0.5)*2.0-1.0);\n  vec2 oc = mix(oa,ob,0.5)*strength;\n  \n  float w0 = progress;\n  float w1 = 1.0-w0;\n  return mix(getFromColor(p+oc*w0), getToColor(p-oc*w1), progress);\n}\n",author:"paniq",license:"MIT",createdAt:"Thu, 10 Aug 2017 00:27:36 +0200",updatedAt:"Thu, 10 Aug 2017 00:32:01 +0200"},{name:"multiply_blend",paramsTypes:{},defaultParams:{},glsl:"// Author: Fernando Kuteken\n// License: MIT\n\nvec4 blend(vec4 a, vec4 b) {\n  return a * b;\n}\n\nvec4 transition (vec2 uv) {\n  \n  vec4 blended = blend(getFromColor(uv), getToColor(uv));\n  \n  if (progress < 0.5)\n    return mix(getFromColor(uv), blended, 2.0 * progress);\n  else\n    return mix(blended, getToColor(uv), 2.0 * progress - 1.0);\n}\n\n",author:"Fernando Kuteken",license:"MIT",createdAt:"Mon, 29 May 2017 17:13:58 -0300",updatedAt:"Mon, 29 May 2017 17:13:58 -0300"},{name:"pinwheel",paramsTypes:{speed:"float"},defaultParams:{speed:2},glsl:"// Author: Mr Speaker\n// License: MIT\n\nuniform float speed; // = 2.0;\n\nvec4 transition(vec2 uv) {\n  \n  vec2 p = uv.xy / vec2(1.0).xy;\n  \n  float circPos = atan(p.y - 0.5, p.x - 0.5) + progress * speed;\n  float modPos = mod(circPos, 3.1415 / 4.);\n  float signed = sign(progress - modPos);\n  \n  return mix(getToColor(p), getFromColor(p), step(signed, 0.5));\n  \n}\n",author:"Mr Speaker",license:"MIT",createdAt:"Tue, 30 May 2017 09:04:31 -0400",updatedAt:"Tue, 30 May 2017 09:04:31 -0400"},{name:"pixelize",paramsTypes:{squaresMin:"ivec2",steps:"int"},defaultParams:{squaresMin:[20,20],steps:50},glsl:"// Author: gre\n// License: MIT\n// forked from https://gist.github.com/benraziel/c528607361d90a072e98\n\nuniform ivec2 squaresMin/* = ivec2(20) */; // minimum number of squares (when the effect is at its higher level)\nuniform int steps /* = 50 */; // zero disable the stepping\n\nfloat d = min(progress, 1.0 - progress);\nfloat dist = steps>0 ? ceil(d * float(steps)) / float(steps) : d;\nvec2 squareSize = 2.0 * dist / vec2(squaresMin);\n\nvec4 transition(vec2 uv) {\n  vec2 p = dist>0.0 ? (floor(uv / squareSize) + 0.5) * squareSize : uv;\n  return mix(getFromColor(p), getToColor(p), progress);\n}\n",author:"gre",license:"MIT",createdAt:"Mon, 29 May 2017 11:16:08 +0200",updatedAt:"Wed, 31 May 2017 10:58:26 +0200"},{name:"polar_function",paramsTypes:{segments:"int"},defaultParams:{segments:5},glsl:"// Author: Fernando Kuteken\n// License: MIT\n\n#define PI 3.14159265359\n\nuniform int segments; // = 5;\n\nvec4 transition (vec2 uv) {\n  \n  float angle = atan(uv.y - 0.5, uv.x - 0.5) - 0.5 * PI;\n  float normalized = (angle + 1.5 * PI) * (2.0 * PI);\n  \n  float radius = (cos(float(segments) * angle) + 4.0) / 4.0;\n  float difference = length(uv - vec2(0.5, 0.5));\n  \n  if (difference > radius * progress)\n    return getFromColor(uv);\n  else\n    return getToColor(uv);\n}\n",author:"Fernando Kuteken",license:"MIT",createdAt:"Sun, 28 May 2017 18:53:12 -0300",updatedAt:"Sun, 28 May 2017 18:53:12 -0300"},{name:"randomsquares",paramsTypes:{size:"ivec2",smoothness:"float"},defaultParams:{size:[10,10],smoothness:.5},glsl:"// Author: gre\n// License: MIT\n\nuniform ivec2 size; // = ivec2(10, 10)\nuniform float smoothness; // = 0.5\n \nfloat rand (vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 transition(vec2 p) {\n  float r = rand(floor(vec2(size) * p));\n  float m = smoothstep(0.0, -smoothness, r - (progress * (1.0 + smoothness)));\n  return mix(getFromColor(p), getToColor(p), m);\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 11:31:45 +0200",updatedAt:"Sat, 27 May 2017 11:31:45 +0200"},{name:"ripple",paramsTypes:{amplitude:"float",speed:"float"},defaultParams:{amplitude:100,speed:50},glsl:"// Author: gre\n// License: MIT\nuniform float amplitude; // = 100.0\nuniform float speed; // = 50.0\n\nvec4 transition (vec2 uv) {\n  vec2 dir = uv - vec2(.5);\n  float dist = length(dir);\n  vec2 offset = dir * (sin(progress * dist * amplitude - progress * speed) + .5) / 30.;\n  return mix(\n    getFromColor(uv + offset),\n    getToColor(uv),\n    smoothstep(0.2, 1.0, progress)\n  );\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Tue, 30 May 2017 15:15:27 +0200"},{name:"rotate_scale_fade",paramsTypes:{center:"vec2",rotations:"float",scale:"float",backColor:"vec4"},defaultParams:{center:[.5,.5],rotations:1,scale:8,backColor:[.15,.15,.15,1]},glsl:"// Author: Fernando Kuteken\n// License: MIT\n\n#define PI 3.14159265359\n\nuniform vec2 center; // = vec2(0.5, 0.5);\nuniform float rotations; // = 1;\nuniform float scale; // = 8;\nuniform vec4 backColor; // = vec4(0.15, 0.15, 0.15, 1.0);\n\nvec4 transition (vec2 uv) {\n  \n  vec2 difference = uv - center;\n  vec2 dir = normalize(difference);\n  float dist = length(difference);\n  \n  float angle = 2.0 * PI * rotations * progress;\n  \n  float c = cos(angle);\n  float s = sin(angle);\n  \n  float currentScale = mix(scale, 1.0, 2.0 * abs(progress - 0.5));\n  \n  vec2 rotatedDir = vec2(dir.x  * c - dir.y * s, dir.x * s + dir.y * c);\n  vec2 rotatedUv = center + rotatedDir * dist / currentScale;\n  \n  if (rotatedUv.x < 0.0 || rotatedUv.x > 1.0 ||\n      rotatedUv.y < 0.0 || rotatedUv.y > 1.0)\n    return backColor;\n    \n  return mix(getFromColor(rotatedUv), getToColor(rotatedUv), progress);\n}\n",author:"Fernando Kuteken",license:"MIT",createdAt:"Mon, 29 May 2017 18:25:00 -0300",updatedAt:"Tue, 30 May 2017 10:40:03 +0200"},{name:"squareswire",paramsTypes:{squares:"ivec2",direction:"vec2",smoothness:"float"},defaultParams:{squares:[10,10],direction:[1,-.5],smoothness:1.6},glsl:"// Author: gre\n// License: MIT\n \nuniform ivec2 squares;// = ivec2(10,10)\nuniform vec2 direction;// = vec2(1.0, -0.5)\nuniform float smoothness; // = 1.6\n\nconst vec2 center = vec2(0.5, 0.5);\nvec4 transition (vec2 p) {\n  vec2 v = normalize(direction);\n  v /= abs(v.x)+abs(v.y);\n  float d = v.x * center.x + v.y * center.y;\n  float offset = smoothness;\n  float pr = smoothstep(-offset, 0.0, v.x * p.x + v.y * p.y - (d-0.5+progress*(1.+offset)));\n  vec2 squarep = fract(p*vec2(squares));\n  vec2 squaremin = vec2(pr/2.0);\n  vec2 squaremax = vec2(1.0 - pr/2.0);\n  float a = (1.0 - step(progress, 0.0)) * step(squaremin.x, squarep.x) * step(squaremin.y, squarep.y) * step(squarep.x, squaremax.x) * step(squarep.y, squaremax.y);\n  return mix(getFromColor(p), getToColor(p), a);\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"squeeze",paramsTypes:{colorSeparation:"float"},defaultParams:{colorSeparation:.04},glsl:"// Author: gre\n// License: MIT\n \nuniform float colorSeparation; // = 0.04\n \nvec4 transition (vec2 uv) {\n  float y = 0.5 + (uv.y-0.5) / (1.0-progress);\n  if (y < 0.0 || y > 1.0) {\n     return getToColor(uv);\n  }\n  else {\n    vec2 fp = vec2(uv.x, y);\n    vec2 off = progress * vec2(0.0, colorSeparation);\n    vec4 c = getFromColor(fp);\n    vec4 cn = getFromColor(fp - off);\n    vec4 cp = getFromColor(fp + off);\n    return vec4(cn.r, c.g, cp.b, c.a);\n  }\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"swap",paramsTypes:{reflection:"float",perspective:"float",depth:"float"},defaultParams:{reflection:.4,perspective:.2,depth:3},glsl:"// Author: gre\n// License: MIT\n// General parameters\nuniform float reflection; // = 0.4\nuniform float perspective; // = 0.2\nuniform float depth; // = 3.0\n \nconst vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec2 boundMin = vec2(0.0, 0.0);\nconst vec2 boundMax = vec2(1.0, 1.0);\n \nbool inBounds (vec2 p) {\n  return all(lessThan(boundMin, p)) && all(lessThan(p, boundMax));\n}\n \nvec2 project (vec2 p) {\n  return p * vec2(1.0, -1.2) + vec2(0.0, -0.02);\n}\n \nvec4 bgColor (vec2 p, vec2 pfr, vec2 pto) {\n  vec4 c = black;\n  pfr = project(pfr);\n  if (inBounds(pfr)) {\n    c += mix(black, getFromColor(pfr), reflection * mix(1.0, 0.0, pfr.y));\n  }\n  pto = project(pto);\n  if (inBounds(pto)) {\n    c += mix(black, getToColor(pto), reflection * mix(1.0, 0.0, pto.y));\n  }\n  return c;\n}\n \nvec4 transition(vec2 p) {\n  vec2 pfr, pto = vec2(-1.);\n \n  float size = mix(1.0, depth, progress);\n  float persp = perspective * progress;\n  pfr = (p + vec2(-0.0, -0.5)) * vec2(size/(1.0-perspective*progress), size/(1.0-size*persp*p.x)) + vec2(0.0, 0.5);\n \n  size = mix(1.0, depth, 1.-progress);\n  persp = perspective * (1.-progress);\n  pto = (p + vec2(-1.0, -0.5)) * vec2(size/(1.0-perspective*(1.0-progress)), size/(1.0-size*persp*(0.5-p.x))) + vec2(1.0, 0.5);\n \n  bool fromOver = progress < 0.5;\n \n  if (fromOver) {\n    if (inBounds(pfr)) {\n      return getFromColor(pfr);\n    }\n    else if (inBounds(pto)) {\n      return getToColor(pto);\n    }\n    else {\n      return bgColor(p, pfr, pto);\n    }\n  }\n  else {\n    if (inBounds(pto)) {\n      return getToColor(pto);\n    }\n    else if (inBounds(pfr)) {\n      return getFromColor(pfr);\n    }\n    else {\n      return bgColor(p, pfr, pto);\n    }\n  }\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 11:36:00 +0200",updatedAt:"Sat, 27 May 2017 11:36:00 +0200"},{name:"undulatingBurnOut",paramsTypes:{smoothness:"float",center:"vec2",color:"vec3"},defaultParams:{smoothness:.03,center:[.5,.5],color:[0,0,0]},glsl:"// License: MIT\n// Author: pthrasher\n// adapted by gre from https://gist.github.com/pthrasher/8e6226b215548ba12734\n\nuniform float smoothness; // = 0.03\nuniform vec2 center; // = vec2(0.5)\nuniform vec3 color; // = vec3(0.0)\n\nconst float M_PI = 3.14159265358979323846;\n\nfloat quadraticInOut(float t) {\n  float p = 2.0 * t * t;\n  return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\n}\n\nfloat getGradient(float r, float dist) {\n  float d = r - dist;\n  return mix(\n    smoothstep(-smoothness, 0.0, r - dist * (1.0 + smoothness)),\n    -1.0 - step(0.005, d),\n    step(-0.005, d) * step(d, 0.01)\n  );\n}\n\nfloat getWave(vec2 p){\n  vec2 _p = p - center; // offset from center\n  float rads = atan(_p.y, _p.x);\n  float degs = degrees(rads) + 180.0;\n  vec2 range = vec2(0.0, M_PI * 30.0);\n  vec2 domain = vec2(0.0, 360.0);\n  float ratio = (M_PI * 30.0) / 360.0;\n  degs = degs * ratio;\n  float x = progress;\n  float magnitude = mix(0.02, 0.09, smoothstep(0.0, 1.0, x));\n  float offset = mix(40.0, 30.0, smoothstep(0.0, 1.0, x));\n  float ease_degs = quadraticInOut(sin(degs));\n  float deg_wave_pos = (ease_degs * magnitude) * sin(x * offset);\n  return x + deg_wave_pos;\n}\n\nvec4 transition(vec2 p) {\n  float dist = distance(center, p);\n  float m = getGradient(getWave(p), dist);\n  vec4 cfrom = getFromColor(p);\n  vec4 cto = getToColor(p);\n  return mix(mix(cfrom, cto, m), mix(cfrom, vec4(color, 1.0), 0.75), step(m, -2.0));\n}\n",license:"MIT",author:"pthrasher",createdAt:"Mon, 12 Jun 2017 10:23:37 +0800",updatedAt:"Mon, 12 Jun 2017 10:23:37 +0800"},{name:"wind",paramsTypes:{size:"float"},defaultParams:{size:.2},glsl:"// Author: gre\n// License: MIT\n\n// Custom parameters\nuniform float size; // = 0.2\n\nfloat rand (vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 transition (vec2 uv) {\n  float r = rand(vec2(0, uv.y));\n  float m = smoothstep(0.0, -size, uv.x*(1.0-size) + size*r - (progress * (1.0 + size)));\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    m\n  );\n}\n",author:"gre",license:"MIT",createdAt:"Sat, 27 May 2017 14:42:25 +0200",updatedAt:"Sat, 27 May 2017 14:42:25 +0200"},{name:"windowblinds",paramsTypes:{},defaultParams:{},glsl:"// Author: Fabien Benetou\n// License: MIT\n\nvec4 transition (vec2 uv) {\n  float t = progress;\n  \n  if (mod(floor(uv.y*100.*progress),2.)==0.)\n    t*=2.-.5;\n  \n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    mix(t, progress, smoothstep(0.8, 1.0, progress))\n  );\n}\n",author:"Fabien Benetou",license:"MIT",createdAt:"Wed, 31 May 2017 14:11:48 +0200",updatedAt:"Wed, 31 May 2017 14:11:48 +0200"},{name:"wipeDown",paramsTypes:{},defaultParams:{},glsl:"// Author: Jake Nelson\n// License: MIT\n\nvec4 transition(vec2 uv) {\n  vec2 p=uv.xy/vec2(1.0).xy;\n  vec4 a=getFromColor(p);\n  vec4 b=getToColor(p);\n  return mix(a, b, step(1.0-p.y,progress));\n}\n",author:"Jake Nelson",license:"MIT",createdAt:"Wed, 1 Nov 2017 15:26:01 -0500",updatedAt:"Thu, 2 Nov 2017 18:39:26 -0500"},{name:"wipeLeft",paramsTypes:{},defaultParams:{},glsl:"// Author: Jake Nelson\n// License: MIT\n\nvec4 transition(vec2 uv) {\n  vec2 p=uv.xy/vec2(1.0).xy;\n  vec4 a=getFromColor(p);\n  vec4 b=getToColor(p);\n  return mix(a, b, step(1.0-p.x,progress));\n}\n",author:"Jake Nelson",license:"MIT",createdAt:"Wed, 1 Nov 2017 15:26:28 -0500",updatedAt:"Fri, 3 Nov 2017 18:03:50 +0100"},{name:"wipeRight",paramsTypes:{},defaultParams:{},glsl:"// Author: Jake Nelson\n// License: MIT\n\nvec4 transition(vec2 uv) {\n  vec2 p=uv.xy/vec2(1.0).xy;\n  vec4 a=getFromColor(p);\n  vec4 b=getToColor(p);\n  return mix(a, b, step(0.0+p.x,progress));\n}\n",author:"Jake Nelson",license:"MIT",createdAt:"Wed, 1 Nov 2017 15:27:02 -0500",updatedAt:"Thu, 2 Nov 2017 18:40:22 -0500"},{name:"wipeUp",paramsTypes:{},defaultParams:{},glsl:"// Author: Jake Nelson\n// License: MIT\n\nvec4 transition(vec2 uv) {\n  vec2 p=uv.xy/vec2(1.0).xy;\n  vec4 a=getFromColor(p);\n  vec4 b=getToColor(p);\n  return mix(a, b, step(0.0+p.y,progress));\n}\n",author:"Jake Nelson",license:"MIT",createdAt:"Wed, 1 Nov 2017 15:24:36 -0500",updatedAt:"Thu, 2 Nov 2017 18:37:42 -0500"}]},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},o=t(8),a=function(e){return e&&e.__esModule?e:{default:e}}(o),s={cover:function(e){return".5+(uv-.5)*vec2(min(ratio/"+e+",1.),min("+e+"/ratio,1.))"},contain:function(e){return".5+(uv-.5)*vec2(max(ratio/"+e+",1.),max("+e+"/ratio,1.))"},stretch:function(){return"uv"}},i=function(e,r){var t=s[r];if(!t)throw new Error("invalid resizeMode="+r);return"precision highp float;varying vec2 _uv;uniform sampler2D from, to;uniform float progress, ratio, _fromR, _toR;vec4 getFromColor(vec2 uv){return texture2D(from,"+t("_fromR")+");}vec4 getToColor(vec2 uv){return texture2D(to,"+t("_toR")+");}\n"+e+"\nvoid main(){gl_FragColor=transition(_uv);}"};r.default=function(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=n({resizeMode:"cover"},t),s=o.resizeMode,u=(0,a.default)(e,"attribute vec2 _p;\nvarying vec2 _uv;\nvoid main() {\ngl_Position = vec4(_p,0.0,1.0);\n_uv = vec2(0.5, 0.5) * (_p+vec2(1.0, 1.0));\n}",i(r.glsl,s));return u.bind(),u.attributes._p.pointer(),{draw:function(t,n,o){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.drawingBufferWidth,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:e.drawingBufferHeight,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};u.bind(),u.uniforms.ratio=a/s,u.uniforms.progress=t,u.uniforms.from=n.bind(0),u.uniforms.to=o.bind(1),u.uniforms._fromR=n.shape[0]/n.shape[1],u.uniforms._toR=o.shape[0]/o.shape[1];var l=2;for(var c in r.paramsTypes){var f=c in i?i[c]:r.defaultParams[c];if("sampler2D"===r.paramsTypes[c])if(f){if("function"!=typeof f.bind)throw new Error("uniform["+c+"]: A gl-texture2d API-like object was expected");u.uniforms[c]=f.bind(l++)}else console.warn("uniform["+c+"]: A texture MUST be defined for uniform sampler2D of a texture");else u.uniforms[c]=f}e.drawArrays(e.TRIANGLES,0,3)},dispose:function(){u.dispose()}}}},function(e,r,t){"use strict";function n(e){this.gl=e,this.gl.lastAttribCount=0,this._vref=this._fref=this._relink=this.vertShader=this.fragShader=this.program=this.attributes=this.uniforms=this.types=null}function o(e,r){return e.name<r.name?-1:1}function a(e,r,t,o,a){var s=new n(e);return s.update(r,t,o,a),s}var s=t(9),i=t(10),u=t(1),l=t(11),c=t(29),f=t(0),p=n.prototype;p.bind=function(){this.program||this._relink();var e,r=this.gl.getProgramParameter(this.program,this.gl.ACTIVE_ATTRIBUTES),t=this.gl.lastAttribCount;if(r>t)for(e=t;e<r;e++)this.gl.enableVertexAttribArray(e);else if(t>r)for(e=r;e<t;e++)this.gl.disableVertexAttribArray(e);this.gl.lastAttribCount=r,this.gl.useProgram(this.program)},p.dispose=function(){for(var e=this.gl.lastAttribCount,r=0;r<e;r++)this.gl.disableVertexAttribArray(r);this.gl.lastAttribCount=0,this._fref&&this._fref.dispose(),this._vref&&this._vref.dispose(),this.attributes=this.types=this.vertShader=this.fragShader=this.program=this._relink=this._fref=this._vref=null},p.update=function(e,r,t,n){function a(){h.program=l.program(g,h._vref,h._fref,E,A);for(var e=0;e<t.length;++e)M[e]=g.getUniformLocation(h.program,t[e].name)}if(!r||1===arguments.length){var p=e;e=p.vertex,r=p.fragment,t=p.uniforms,n=p.attributes}var h=this,g=h.gl,d=h._vref;h._vref=l.shader(g,g.VERTEX_SHADER,e),d&&d.dispose(),h.vertShader=h._vref.shader;var m=this._fref;if(h._fref=l.shader(g,g.FRAGMENT_SHADER,r),m&&m.dispose(),h.fragShader=h._fref.shader,!t||!n){var v=g.createProgram();if(g.attachShader(v,h.fragShader),g.attachShader(v,h.vertShader),g.linkProgram(v),!g.getProgramParameter(v,g.LINK_STATUS)){var _=g.getProgramInfoLog(v);throw new f(_,"Error linking program:"+_)}t=t||c.uniforms(g,v),n=n||c.attributes(g,v),g.deleteProgram(v)}n=n.slice(),n.sort(o);var y,T=[],E=[],A=[];for(y=0;y<n.length;++y){var b=n[y];if(b.type.indexOf("mat")>=0){for(var x=0|b.type.charAt(b.type.length-1),I=new Array(x),R=0;R<x;++R)I[R]=A.length,E.push(b.name+"["+R+"]"),"number"==typeof b.location?A.push(b.location+R):Array.isArray(b.location)&&b.location.length===x&&"number"==typeof b.location[R]?A.push(0|b.location[R]):A.push(-1);T.push({name:b.name,type:b.type,locations:I})}else T.push({name:b.name,type:b.type,locations:[A.length]}),E.push(b.name),"number"==typeof b.location?A.push(0|b.location):A.push(-1)}var w=0;for(y=0;y<A.length;++y)if(A[y]<0){for(;A.indexOf(w)>=0;)w+=1;A[y]=w}var M=new Array(t.length);a(),h._relink=a,h.types={uniforms:u(t),attributes:u(n)},h.attributes=i(g,h,T,A),Object.defineProperty(h,"uniforms",s(g,h,t,M))},e.exports=a},function(e,r,t){"use strict";function n(e){return new Function("y","return function(){return y}")(e)}function o(e,r){for(var t=new Array(e),n=0;n<e;++n)t[n]=r;return t}function a(e,r,t,a){function u(t){return new Function("gl","wrapper","locations","return function(){return gl.getUniform(wrapper.program,locations["+t+"])}")(e,r,a)}function l(e,r,t){switch(t){case"bool":case"int":case"sampler2D":case"samplerCube":return"gl.uniform1i(locations["+r+"],obj"+e+")";case"float":return"gl.uniform1f(locations["+r+"],obj"+e+")";default:var n=t.indexOf("vec");if(!(0<=n&&n<=1&&t.length===4+n)){if(0===t.indexOf("mat")&&4===t.length){var o=t.charCodeAt(t.length-1)-48;if(o<2||o>4)throw new i("","Invalid uniform dimension type for matrix "+name+": "+t);return"gl.uniformMatrix"+o+"fv(locations["+r+"],false,obj"+e+")"}throw new i("","Unknown uniform data type for "+name+": "+t)}var o=t.charCodeAt(t.length-1)-48;if(o<2||o>4)throw new i("","Invalid data type");switch(t.charAt(0)){case"b":case"i":return"gl.uniform"+o+"iv(locations["+r+"],obj"+e+")";case"v":return"gl.uniform"+o+"fv(locations["+r+"],obj"+e+")";default:throw new i("","Unrecognized data type for vector "+name+": "+t)}}}function c(e,r){if("object"!=typeof r)return[[e,r]];var t=[];for(var n in r){var o=r[n],a=e;parseInt(n)+""===n?a+="["+n+"]":a+="."+n,"object"==typeof o?t.push.apply(t,c(a,o)):t.push([a,o])}return t}function f(r){for(var n=["return function updateProperty(obj){"],o=c("",r),s=0;s<o.length;++s){var i=o[s],u=i[0],f=i[1];a[f]&&n.push(l(u,f,t[f].type))}return n.push("return obj}"),new Function("gl","locations",n.join("\n"))(e,a)}function p(e){switch(e){case"bool":return!1;case"int":case"sampler2D":case"samplerCube":case"float":return 0;default:var r=e.indexOf("vec");if(0<=r&&r<=1&&e.length===4+r){var t=e.charCodeAt(e.length-1)-48;if(t<2||t>4)throw new i("","Invalid data type");return"b"===e.charAt(0)?o(t,!1):o(t,0)}if(0===e.indexOf("mat")&&4===e.length){var t=e.charCodeAt(e.length-1)-48;if(t<2||t>4)throw new i("","Invalid uniform dimension type for matrix "+name+": "+e);return o(t*t,0)}throw new i("","Unknown uniform data type for "+name+": "+e)}}function h(e,r,o){if("object"==typeof o){var s=g(o);Object.defineProperty(e,r,{get:n(s),set:f(o),enumerable:!0,configurable:!1})}else a[o]?Object.defineProperty(e,r,{get:u(o),set:f(o),enumerable:!0,configurable:!1}):e[r]=p(t[o].type)}function g(e){var r;if(Array.isArray(e)){r=new Array(e.length);for(var t=0;t<e.length;++t)h(r,t,e[t])}else{r={};for(var n in e)h(r,n,e[n])}return r}var d=s(t,!0);return{get:n(g(d)),set:f(d),enumerable:!0,configurable:!0}}var s=t(1),i=t(0);e.exports=a},function(e,r,t){"use strict";function n(e,r,t,n,o,a){this._gl=e,this._wrapper=r,this._index=t,this._locations=n,this._dimension=o,this._constFunc=a}function o(e,r,t,o,a,s,i){for(var u=["gl","v"],l=[],c=0;c<a;++c)u.push("x"+c),l.push("x"+c);u.push("if(x0.length===void 0){return gl.vertexAttrib"+a+"f(v,"+l.join()+")}else{return gl.vertexAttrib"+a+"fv(v,x0)}");var f=Function.apply(null,u),p=new n(e,r,t,o,a,f);Object.defineProperty(s,i,{set:function(r){return e.disableVertexAttribArray(o[t]),f(e,o[t],r),r},get:function(){return p},enumerable:!0})}function a(e,r,t,n,a,s,i){for(var u=new Array(a),l=new Array(a),c=0;c<a;++c)o(e,r,t[c],n,a,u,c),l[c]=u[c];Object.defineProperty(u,"location",{set:function(e){if(Array.isArray(e))for(var r=0;r<a;++r)l[r].location=e[r];else for(var r=0;r<a;++r)l[r].location=e+r;return e},get:function(){for(var e=new Array(a),r=0;r<a;++r)e[r]=n[t[r]];return e},enumerable:!0}),u.pointer=function(r,o,s,i){r=r||e.FLOAT,o=!!o,s=s||a*a,i=i||0;for(var u=0;u<a;++u){var l=n[t[u]];e.vertexAttribPointer(l,a,r,o,s,i+u*a),e.enableVertexAttribArray(l)}};var f=new Array(a),p=e["vertexAttrib"+a+"fv"];Object.defineProperty(s,i,{set:function(r){for(var o=0;o<a;++o){var s=n[t[o]];if(e.disableVertexAttribArray(s),Array.isArray(r[0]))p.call(e,s,r[o]);else{for(var i=0;i<a;++i)f[i]=r[a*o+i];p.call(e,s,f)}}return r},get:function(){return u},enumerable:!0})}function s(e,r,t,n){for(var s={},u=0,l=t.length;u<l;++u){var c=t[u],f=c.name,p=c.type,h=c.locations;switch(p){case"bool":case"int":case"float":o(e,r,h[0],n,1,s,f);break;default:if(p.indexOf("vec")>=0){var g=p.charCodeAt(p.length-1)-48;if(g<2||g>4)throw new i("","Invalid data type for attribute "+f+": "+p);o(e,r,h[0],n,g,s,f)}else{if(!(p.indexOf("mat")>=0))throw new i("","Unknown data type for attribute "+f+": "+p);var g=p.charCodeAt(p.length-1)-48;if(g<2||g>4)throw new i("","Invalid data type for attribute "+f+": "+p);a(e,r,h,n,g,s,f)}}}return s}e.exports=s;var i=t(0),u=n.prototype;u.pointer=function(e,r,t,n){var o=this,a=o._gl,s=o._locations[o._index];a.vertexAttribPointer(s,o._dimension,e||a.FLOAT,!!r,t||0,n||0),a.enableVertexAttribArray(s)},u.set=function(e,r,t,n){return this._constFunc(this._locations[this._index],e,r,t,n)},Object.defineProperty(u,"location",{get:function(){return this._locations[this._index]},set:function(e){return e!==this._locations[this._index]&&(this._locations[this._index]=0|e,this._wrapper.program=null),0|e}})},function(e,r,t){"use strict";function n(e,r,t,n,o,a,s){this.id=e,this.src=r,this.type=t,this.shader=n,this.count=a,this.programs=[],this.cache=s}function o(e){this.gl=e,this.shaders=[{},{}],this.programs={}}function a(e,r,t){var n=e.createShader(r);if(e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS)){var o=e.getShaderInfoLog(n);try{var a=f(o,t,r)}catch(e){throw console.warn("Failed to format compiler error: "+e),new c(o,"Error compiling shader:\n"+o)}throw new c(o,a.short,a.long)}return n}function s(e,r,t,n,o){var a=e.createProgram();e.attachShader(a,r),e.attachShader(a,t);for(var s=0;s<n.length;++s)e.bindAttribLocation(a,o[s],n[s]);if(e.linkProgram(a),!e.getProgramParameter(a,e.LINK_STATUS)){var i=e.getProgramInfoLog(a);throw new c(i,"Error linking program: "+i)}return a}function i(e){var r=h.get(e);return r||(r=new o(e),h.set(e,r)),r}function u(e,r,t){return i(e).getShaderReference(r,t)}function l(e,r,t,n,o){return i(e).getProgram(r,t,n,o)}r.shader=u,r.program=l;var c=t(0),f=t(12),p="undefined"==typeof WeakMap?t(26):WeakMap,h=new p,g=0;n.prototype.dispose=function(){if(0==--this.count){for(var e=this.cache,r=e.gl,t=this.programs,n=0,o=t.length;n<o;++n){var a=e.programs[t[n]];a&&(delete e.programs[n],r.deleteProgram(a))}r.deleteShader(this.shader),delete e.shaders[this.type===r.FRAGMENT_SHADER|0][this.src]}};var d=o.prototype;d.getShaderReference=function(e,r){var t=this.gl,o=this.shaders[e===t.FRAGMENT_SHADER|0],s=o[r];if(s&&t.isShader(s.shader))s.count+=1;else{var i=a(t,e,r);s=o[r]=new n(g++,r,e,i,[],1,this)}return s},d.getProgram=function(e,r,t,n){var o=[e.id,r.id,t.join(":"),n.join(":")].join("@"),a=this.programs[o];return a&&this.gl.isProgram(a)||(this.programs[o]=a=s(this.gl,e.shader,r.shader,t,n),e.programs.push(o),r.programs.push(o)),a}},function(e,r,t){function n(e,r,t){"use strict";var n=s(r)||"of unknown name (see npm glsl-shader-name)",u="unknown type";void 0!==t&&(u=t===a.FRAGMENT_SHADER?"fragment":"vertex");for(var l=o("Error compiling %s shader %s:\n",u,n),c=o("%s%s",l,e),f=e.split("\n"),p={},h=0;h<f.length;h++){var g=f[h];if(""!==g&&"\0"!==g){var d=parseInt(g.split(":")[2]);if(isNaN(d))throw new Error(o("Could not parse error: %s",g));p[d]=g}}for(var m=i(r).split("\n"),h=0;h<m.length;h++)if(p[h+3]||p[h+2]||p[h+1]){var v=m[h];if(l+=v+"\n",p[h+1]){var _=p[h+1];_=_.substr(_.split(":",3).join(":").length+1).trim(),l+=o("^^^ %s\n\n",_)}}return{long:l.trim(),short:c.trim()}}var o=t(13).sprintf,a=t(14),s=t(16),i=t(23);e.exports=n},function(e,r,t){var n;!function(){"use strict";function o(e){return s(i(e),arguments)}function a(e,r){return o.apply(null,[e].concat(r||[]))}function s(e,r){var t,n,a,s,i,l,c,f,p,h=1,g=e.length,d="";for(n=0;n<g;n++)if("string"==typeof e[n])d+=e[n];else if(Array.isArray(e[n])){if(s=e[n],s[2])for(t=r[h],a=0;a<s[2].length;a++){if(!t.hasOwnProperty(s[2][a]))throw new Error(o('[sprintf] property "%s" does not exist',s[2][a]));t=t[s[2][a]]}else t=s[1]?r[s[1]]:r[h++];if(u.not_type.test(s[8])&&u.not_primitive.test(s[8])&&t instanceof Function&&(t=t()),u.numeric_arg.test(s[8])&&"number"!=typeof t&&isNaN(t))throw new TypeError(o("[sprintf] expecting number but found %T",t));switch(u.number.test(s[8])&&(f=t>=0),s[8]){case"b":t=parseInt(t,10).toString(2);break;case"c":t=String.fromCharCode(parseInt(t,10));break;case"d":case"i":t=parseInt(t,10);break;case"j":t=JSON.stringify(t,null,s[6]?parseInt(s[6]):0);break;case"e":t=s[7]?parseFloat(t).toExponential(s[7]):parseFloat(t).toExponential();break;case"f":t=s[7]?parseFloat(t).toFixed(s[7]):parseFloat(t);break;case"g":t=s[7]?String(Number(t.toPrecision(s[7]))):parseFloat(t);break;case"o":t=(parseInt(t,10)>>>0).toString(8);break;case"s":t=String(t),t=s[7]?t.substring(0,s[7]):t;break;case"t":t=String(!!t),t=s[7]?t.substring(0,s[7]):t;break;case"T":t=Object.prototype.toString.call(t).slice(8,-1).toLowerCase(),t=s[7]?t.substring(0,s[7]):t;break;case"u":t=parseInt(t,10)>>>0;break;case"v":t=t.valueOf(),t=s[7]?t.substring(0,s[7]):t;break;case"x":t=(parseInt(t,10)>>>0).toString(16);break;case"X":t=(parseInt(t,10)>>>0).toString(16).toUpperCase()}u.json.test(s[8])?d+=t:(!u.number.test(s[8])||f&&!s[3]?p="":(p=f?"+":"-",t=t.toString().replace(u.sign,"")),l=s[4]?"0"===s[4]?"0":s[4].charAt(1):" ",c=s[6]-(p+t).length,i=s[6]&&c>0?l.repeat(c):"",d+=s[5]?p+t+i:"0"===l?p+i+t:i+p+t)}return d}function i(e){if(l[e])return l[e];for(var r,t=e,n=[],o=0;t;){if(null!==(r=u.text.exec(t)))n.push(r[0]);else if(null!==(r=u.modulo.exec(t)))n.push("%");else{if(null===(r=u.placeholder.exec(t)))throw new SyntaxError("[sprintf] unexpected placeholder");if(r[2]){o|=1;var a=[],s=r[2],i=[];if(null===(i=u.key.exec(s)))throw new SyntaxError("[sprintf] failed to parse named argument key");for(a.push(i[1]);""!==(s=s.substring(i[0].length));)if(null!==(i=u.key_access.exec(s)))a.push(i[1]);else{if(null===(i=u.index_access.exec(s)))throw new SyntaxError("[sprintf] failed to parse named argument key");a.push(i[1])}r[2]=a}else o|=2;if(3===o)throw new Error("[sprintf] mixing positional and named placeholders is not (yet) supported");n.push(r)}t=t.substring(r[0].length)}return l[e]=n}var u={not_string:/[^s]/,not_bool:/[^t]/,not_type:/[^T]/,not_primitive:/[^v]/,number:/[diefg]/,numeric_arg:/[bcdiefguxX]/,json:/[j]/,not_json:/[^j]/,text:/^[^\x25]+/,modulo:/^\x25{2}/,placeholder:/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-gijostTuvxX])/,key:/^([a-z_][a-z_\d]*)/i,key_access:/^\.([a-z_][a-z_\d]*)/i,index_access:/^\[(\d+)\]/,sign:/^[\+\-]/},l=Object.create(null);r.sprintf=o,r.vsprintf=a,"undefined"!=typeof window&&(window.sprintf=o,window.vsprintf=a,void 0!==(n=function(){return{sprintf:o,vsprintf:a}}.call(r,t,r,e))&&(e.exports=n))}()},function(e,r,t){var n=t(15);e.exports=function(e){return n[e]}},function(e,r){e.exports={0:"NONE",1:"ONE",2:"LINE_LOOP",3:"LINE_STRIP",4:"TRIANGLES",5:"TRIANGLE_STRIP",6:"TRIANGLE_FAN",256:"DEPTH_BUFFER_BIT",512:"NEVER",513:"LESS",514:"EQUAL",515:"LEQUAL",516:"GREATER",517:"NOTEQUAL",518:"GEQUAL",519:"ALWAYS",768:"SRC_COLOR",769:"ONE_MINUS_SRC_COLOR",770:"SRC_ALPHA",771:"ONE_MINUS_SRC_ALPHA",772:"DST_ALPHA",773:"ONE_MINUS_DST_ALPHA",774:"DST_COLOR",775:"ONE_MINUS_DST_COLOR",776:"SRC_ALPHA_SATURATE",1024:"STENCIL_BUFFER_BIT",1028:"FRONT",1029:"BACK",1032:"FRONT_AND_BACK",1280:"INVALID_ENUM",1281:"INVALID_VALUE",1282:"INVALID_OPERATION",1285:"OUT_OF_MEMORY",1286:"INVALID_FRAMEBUFFER_OPERATION",2304:"CW",2305:"CCW",2849:"LINE_WIDTH",2884:"CULL_FACE",2885:"CULL_FACE_MODE",2886:"FRONT_FACE",2928:"DEPTH_RANGE",2929:"DEPTH_TEST",2930:"DEPTH_WRITEMASK",2931:"DEPTH_CLEAR_VALUE",2932:"DEPTH_FUNC",2960:"STENCIL_TEST",2961:"STENCIL_CLEAR_VALUE",2962:"STENCIL_FUNC",2963:"STENCIL_VALUE_MASK",2964:"STENCIL_FAIL",2965:"STENCIL_PASS_DEPTH_FAIL",2966:"STENCIL_PASS_DEPTH_PASS",2967:"STENCIL_REF",2968:"STENCIL_WRITEMASK",2978:"VIEWPORT",3024:"DITHER",3042:"BLEND",3088:"SCISSOR_BOX",3089:"SCISSOR_TEST",3106:"COLOR_CLEAR_VALUE",3107:"COLOR_WRITEMASK",3317:"UNPACK_ALIGNMENT",3333:"PACK_ALIGNMENT",3379:"MAX_TEXTURE_SIZE",3386:"MAX_VIEWPORT_DIMS",3408:"SUBPIXEL_BITS",3410:"RED_BITS",3411:"GREEN_BITS",3412:"BLUE_BITS",3413:"ALPHA_BITS",3414:"DEPTH_BITS",3415:"STENCIL_BITS",3553:"TEXTURE_2D",4352:"DONT_CARE",4353:"FASTEST",4354:"NICEST",5120:"BYTE",5121:"UNSIGNED_BYTE",5122:"SHORT",5123:"UNSIGNED_SHORT",5124:"INT",5125:"UNSIGNED_INT",5126:"FLOAT",5386:"INVERT",5890:"TEXTURE",6401:"STENCIL_INDEX",6402:"DEPTH_COMPONENT",6406:"ALPHA",6407:"RGB",6408:"RGBA",6409:"LUMINANCE",6410:"LUMINANCE_ALPHA",7680:"KEEP",7681:"REPLACE",7682:"INCR",7683:"DECR",7936:"VENDOR",7937:"RENDERER",7938:"VERSION",9728:"NEAREST",9729:"LINEAR",9984:"NEAREST_MIPMAP_NEAREST",9985:"LINEAR_MIPMAP_NEAREST",9986:"NEAREST_MIPMAP_LINEAR",9987:"LINEAR_MIPMAP_LINEAR",10240:"TEXTURE_MAG_FILTER",10241:"TEXTURE_MIN_FILTER",10242:"TEXTURE_WRAP_S",10243:"TEXTURE_WRAP_T",10497:"REPEAT",10752:"POLYGON_OFFSET_UNITS",16384:"COLOR_BUFFER_BIT",32769:"CONSTANT_COLOR",32770:"ONE_MINUS_CONSTANT_COLOR",32771:"CONSTANT_ALPHA",32772:"ONE_MINUS_CONSTANT_ALPHA",32773:"BLEND_COLOR",32774:"FUNC_ADD",32777:"BLEND_EQUATION_RGB",32778:"FUNC_SUBTRACT",32779:"FUNC_REVERSE_SUBTRACT",32819:"UNSIGNED_SHORT_4_4_4_4",32820:"UNSIGNED_SHORT_5_5_5_1",32823:"POLYGON_OFFSET_FILL",32824:"POLYGON_OFFSET_FACTOR",32854:"RGBA4",32855:"RGB5_A1",32873:"TEXTURE_BINDING_2D",32926:"SAMPLE_ALPHA_TO_COVERAGE",32928:"SAMPLE_COVERAGE",32936:"SAMPLE_BUFFERS",32937:"SAMPLES",32938:"SAMPLE_COVERAGE_VALUE",32939:"SAMPLE_COVERAGE_INVERT",32968:"BLEND_DST_RGB",32969:"BLEND_SRC_RGB",32970:"BLEND_DST_ALPHA",32971:"BLEND_SRC_ALPHA",33071:"CLAMP_TO_EDGE",33170:"GENERATE_MIPMAP_HINT",33189:"DEPTH_COMPONENT16",33306:"DEPTH_STENCIL_ATTACHMENT",33635:"UNSIGNED_SHORT_5_6_5",33648:"MIRRORED_REPEAT",33901:"ALIASED_POINT_SIZE_RANGE",33902:"ALIASED_LINE_WIDTH_RANGE",33984:"TEXTURE0",33985:"TEXTURE1",33986:"TEXTURE2",33987:"TEXTURE3",33988:"TEXTURE4",33989:"TEXTURE5",33990:"TEXTURE6",33991:"TEXTURE7",33992:"TEXTURE8",33993:"TEXTURE9",33994:"TEXTURE10",33995:"TEXTURE11",33996:"TEXTURE12",33997:"TEXTURE13",33998:"TEXTURE14",33999:"TEXTURE15",34e3:"TEXTURE16",34001:"TEXTURE17",34002:"TEXTURE18",34003:"TEXTURE19",34004:"TEXTURE20",34005:"TEXTURE21",34006:"TEXTURE22",34007:"TEXTURE23",34008:"TEXTURE24",34009:"TEXTURE25",34010:"TEXTURE26",34011:"TEXTURE27",34012:"TEXTURE28",34013:"TEXTURE29",34014:"TEXTURE30",34015:"TEXTURE31",34016:"ACTIVE_TEXTURE",34024:"MAX_RENDERBUFFER_SIZE",34041:"DEPTH_STENCIL",34055:"INCR_WRAP",34056:"DECR_WRAP",34067:"TEXTURE_CUBE_MAP",34068:"TEXTURE_BINDING_CUBE_MAP",34069:"TEXTURE_CUBE_MAP_POSITIVE_X",34070:"TEXTURE_CUBE_MAP_NEGATIVE_X",34071:"TEXTURE_CUBE_MAP_POSITIVE_Y",34072:"TEXTURE_CUBE_MAP_NEGATIVE_Y",34073:"TEXTURE_CUBE_MAP_POSITIVE_Z",34074:"TEXTURE_CUBE_MAP_NEGATIVE_Z",34076:"MAX_CUBE_MAP_TEXTURE_SIZE",34338:"VERTEX_ATTRIB_ARRAY_ENABLED",34339:"VERTEX_ATTRIB_ARRAY_SIZE",34340:"VERTEX_ATTRIB_ARRAY_STRIDE",34341:"VERTEX_ATTRIB_ARRAY_TYPE",34342:"CURRENT_VERTEX_ATTRIB",34373:"VERTEX_ATTRIB_ARRAY_POINTER",34466:"NUM_COMPRESSED_TEXTURE_FORMATS",34467:"COMPRESSED_TEXTURE_FORMATS",34660:"BUFFER_SIZE",34661:"BUFFER_USAGE",34816:"STENCIL_BACK_FUNC",34817:"STENCIL_BACK_FAIL",34818:"STENCIL_BACK_PASS_DEPTH_FAIL",34819:"STENCIL_BACK_PASS_DEPTH_PASS",34877:"BLEND_EQUATION_ALPHA",34921:"MAX_VERTEX_ATTRIBS",34922:"VERTEX_ATTRIB_ARRAY_NORMALIZED",34930:"MAX_TEXTURE_IMAGE_UNITS",34962:"ARRAY_BUFFER",34963:"ELEMENT_ARRAY_BUFFER",34964:"ARRAY_BUFFER_BINDING",34965:"ELEMENT_ARRAY_BUFFER_BINDING",34975:"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",35040:"STREAM_DRAW",35044:"STATIC_DRAW",35048:"DYNAMIC_DRAW",35632:"FRAGMENT_SHADER",35633:"VERTEX_SHADER",35660:"MAX_VERTEX_TEXTURE_IMAGE_UNITS",35661:"MAX_COMBINED_TEXTURE_IMAGE_UNITS",35663:"SHADER_TYPE",35664:"FLOAT_VEC2",35665:"FLOAT_VEC3",35666:"FLOAT_VEC4",35667:"INT_VEC2",35668:"INT_VEC3",35669:"INT_VEC4",35670:"BOOL",35671:"BOOL_VEC2",35672:"BOOL_VEC3",35673:"BOOL_VEC4",35674:"FLOAT_MAT2",35675:"FLOAT_MAT3",35676:"FLOAT_MAT4",35678:"SAMPLER_2D",35680:"SAMPLER_CUBE",35712:"DELETE_STATUS",35713:"COMPILE_STATUS",35714:"LINK_STATUS",35715:"VALIDATE_STATUS",35716:"INFO_LOG_LENGTH",35717:"ATTACHED_SHADERS",35718:"ACTIVE_UNIFORMS",35719:"ACTIVE_UNIFORM_MAX_LENGTH",35720:"SHADER_SOURCE_LENGTH",35721:"ACTIVE_ATTRIBUTES",35722:"ACTIVE_ATTRIBUTE_MAX_LENGTH",35724:"SHADING_LANGUAGE_VERSION",35725:"CURRENT_PROGRAM",36003:"STENCIL_BACK_REF",36004:"STENCIL_BACK_VALUE_MASK",36005:"STENCIL_BACK_WRITEMASK",36006:"FRAMEBUFFER_BINDING",36007:"RENDERBUFFER_BINDING",36048:"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",36049:"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",36050:"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",36051:"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",36053:"FRAMEBUFFER_COMPLETE",36054:"FRAMEBUFFER_INCOMPLETE_ATTACHMENT",36055:"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",36057:"FRAMEBUFFER_INCOMPLETE_DIMENSIONS",36061:"FRAMEBUFFER_UNSUPPORTED",36064:"COLOR_ATTACHMENT0",36096:"DEPTH_ATTACHMENT",36128:"STENCIL_ATTACHMENT",36160:"FRAMEBUFFER",36161:"RENDERBUFFER",36162:"RENDERBUFFER_WIDTH",36163:"RENDERBUFFER_HEIGHT",36164:"RENDERBUFFER_INTERNAL_FORMAT",36168:"STENCIL_INDEX8",36176:"RENDERBUFFER_RED_SIZE",36177:"RENDERBUFFER_GREEN_SIZE",36178:"RENDERBUFFER_BLUE_SIZE",36179:"RENDERBUFFER_ALPHA_SIZE",36180:"RENDERBUFFER_DEPTH_SIZE",36181:"RENDERBUFFER_STENCIL_SIZE",36194:"RGB565",36336:"LOW_FLOAT",36337:"MEDIUM_FLOAT",36338:"HIGH_FLOAT",36339:"LOW_INT",36340:"MEDIUM_INT",36341:"HIGH_INT",36346:"SHADER_COMPILER",36347:"MAX_VERTEX_UNIFORM_VECTORS",36348:"MAX_VARYING_VECTORS",36349:"MAX_FRAGMENT_UNIFORM_VECTORS",37440:"UNPACK_FLIP_Y_WEBGL",37441:"UNPACK_PREMULTIPLY_ALPHA_WEBGL",37442:"CONTEXT_LOST_WEBGL",37443:"UNPACK_COLORSPACE_CONVERSION_WEBGL",37444:"BROWSER_DEFAULT_WEBGL"}},function(e,r,t){function n(e){for(var r=Array.isArray(e)?e:o(e),t=0;t<r.length;t++){var n=r[t];if("preprocessor"===n.type){var s=n.data.match(/\#define\s+SHADER_NAME(_B64)?\s+(.+)$/);if(s&&s[2]){var i=s[1],u=s[2];return(i?a(u):u).trim()}}}}var o=t(17),a=t(22);e.exports=n},function(e,r,t){function n(e,r){var t=o(r),n=[];return n=n.concat(t(e)),n=n.concat(t(null))}var o=t(18);e.exports=n},function(e,r,t){function n(e){function r(e){e.length&&X.push({type:b[j],data:e,position:H,line:z,column:G})}function t(e){B=0,W+=e,O=W.length;for(var r;F=W[B],B<O;){switch(r=B,j){case f:B=M();break;case p:B=w();break;case h:B=R();break;case g:B=S();break;case d:B=N();break;case A:B=P();break;case m:B=U();break;case c:B=L();break;case T:B=I();break;case l:B=x()}if(r!==B)switch(W[r]){case"\n":G=0,++z;break;default:++G}}return V+=B,W=W.slice(B),X}function n(e){return k.length&&r(k.join("")),j=E,r("(eof)"),X}function x(){return k=k.length?[]:k,"/"===D&&"*"===F?(H=V+B-1,j=f,D=F,B+1):"/"===D&&"/"===F?(H=V+B-1,j=p,D=F,B+1):"#"===F?(j=h,H=V+B,B):/\s/.test(F)?(j=T,H=V+B,B):(q=/\d/.test(F),Y=/[^\w_]/.test(F),H=V+B,j=q?d:Y?g:c,B)}function I(){return/[^\s]/g.test(F)?(r(k.join("")),j=l,B):(k.push(F),D=F,B+1)}function R(){return"\r"!==F&&"\n"!==F||"\\"===D?(k.push(F),D=F,B+1):(r(k.join("")),j=l,B)}function w(){return R()}function M(){return"/"===F&&"*"===D?(k.push(F),r(k.join("")),j=l,B+1):(k.push(F),D=F,B+1)}function S(){if("."===D&&/\d/.test(F))return j=m,B;if("/"===D&&"*"===F)return j=f,B;if("/"===D&&"/"===F)return j=p,B;if("."===F&&k.length){for(;C(k););return j=m,B}if(";"===F||")"===F||"("===F){if(k.length)for(;C(k););return r(F),j=l,B+1}var e=2===k.length&&"="!==F;if(/[\w_\d\s]/.test(F)||e){for(;C(k););return j=l,B}return k.push(F),D=F,B+1}function C(e){for(var t,n,o=0;;){if(t=a.indexOf(e.slice(0,e.length+o).join("")),n=a[t],-1===t){if(o--+e.length>0)continue;n=e.slice(0,1).join("")}return r(n),H+=n.length,k=k.slice(n.length),k.length}}function P(){return/[^a-fA-F0-9]/.test(F)?(r(k.join("")),j=l,B):(k.push(F),D=F,B+1)}function N(){return"."===F?(k.push(F),j=m,D=F,B+1):/[eE]/.test(F)?(k.push(F),j=m,D=F,B+1):"x"===F&&1===k.length&&"0"===k[0]?(j=A,k.push(F),D=F,B+1):/[^\d]/.test(F)?(r(k.join("")),j=l,B):(k.push(F),D=F,B+1)}function U(){return"f"===F&&(k.push(F),D=F,B+=1),/[eE]/.test(F)?(k.push(F),D=F,B+1):"-"===F&&/[eE]/.test(D)?(k.push(F),D=F,B+1):/[^\d]/.test(F)?(r(k.join("")),j=l,B):(k.push(F),D=F,B+1)}function L(){if(/[^\d\w_]/.test(F)){var e=k.join("");return j=K.indexOf(e)>-1?y:J.indexOf(e)>-1?_:v,r(k.join("")),j=l,B}return k.push(F),D=F,B+1}var F,D,O,B=0,V=0,j=l,k=[],X=[],z=1,G=0,H=0,q=!1,Y=!1,W="";e=e||{};var J=s,K=o;return"300 es"===e.version&&(J=u,K=i),function(e){return X=[],null!==e?t(e.replace?e.replace(/\r\n/g,"\n"):e):n()}}e.exports=n;var o=t(2),a=t(19),s=t(3),i=t(20),u=t(21),l=999,c=9999,f=0,p=1,h=2,g=3,d=4,m=5,v=6,_=7,y=8,T=9,E=10,A=11,b=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"]},function(e,r){e.exports=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"]},function(e,r,t){var n=t(2);e.exports=n.slice().concat(["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray"])},function(e,r,t){var n=t(3);n=n.slice().filter(function(e){return!/^(gl\_|texture)/.test(e)}),e.exports=n.concat(["gl_VertexID","gl_InstanceID","gl_Position","gl_PointSize","gl_FragCoord","gl_FrontFacing","gl_FragDepth","gl_PointCoord","gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexOutputVectors","gl_MaxFragmentInputVectors","gl_MaxVertexTextureImageUnits","gl_MaxCombinedTextureImageUnits","gl_MaxTextureImageUnits","gl_MaxFragmentUniformVectors","gl_MaxDrawBuffers","gl_MinProgramTexelOffset","gl_MaxProgramTexelOffset","gl_DepthRangeParameters","gl_DepthRange","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"])},function(e,r){e.exports=function(e){return atob(e)}},function(e,r,t){function n(e,r,t){r="number"==typeof r?r:1,t=t||": ";var n=e.split(/\r?\n/),a=String(n.length+r-1).length;return n.map(function(e,n){var s=n+r,i=String(s).length;return o(s,a-i)+t+e}).join("\n")}var o=t(24);e.exports=n},function(e,r,t){"use strict";/*!
 * pad-left <https://github.com/jonschlinkert/pad-left>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT license.
 */
var n=t(25);e.exports=function(e,r,t){return t=void 0!==t?t+"":" ",n(t,r)+e}},function(e,r,t){"use strict";function n(e,r){if("string"!=typeof e)throw new TypeError("expected a string");if(1===r)return e;if(2===r)return e+e;var t=e.length*r;if(o!==e||void 0===o)o=e,a="";else if(a.length>=t)return a.substr(0,t);for(;t>a.length&&r>1;)1&r&&(a+=e),r>>=1,e+=e;return a+=e,a=a.substr(0,t)}/*!
 * repeat-string <https://github.com/jonschlinkert/repeat-string>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
var o,a="";e.exports=n},function(e,r,t){function n(){var e=o();return{get:function(r,t){var n=e(r);return n.hasOwnProperty("value")?n.value:t},set:function(r,t){return e(r).value=t,this},has:function(r){return"value"in e(r)},delete:function(r){return delete e(r).value}}}var o=t(27);e.exports=n},function(e,r,t){function n(){var e={};return function(r){if(("object"!=typeof r||null===r)&&"function"!=typeof r)throw new Error("Weakmap-shim: Key must be object");var t=r.valueOf(e);return t&&t.identity===e?t:o(r,e)}}var o=t(28);e.exports=n},function(e,r){function t(e,r){var t={identity:r},n=e.valueOf;return Object.defineProperty(e,"valueOf",{value:function(e){return e!==r?n.apply(this,arguments):t},writable:!0}),t}e.exports=t},function(e,r,t){"use strict";function n(e,r){if(!i){var t=Object.keys(s);i={};for(var n=0;n<t.length;++n){var o=t[n];i[e[o]]=s[o]}}return i[r]}function o(e,r){for(var t=e.getProgramParameter(r,e.ACTIVE_UNIFORMS),o=[],a=0;a<t;++a){var s=e.getActiveUniform(r,a);if(s){var i=n(e,s.type);if(s.size>1)for(var u=0;u<s.size;++u)o.push({name:s.name.replace("[0]","["+u+"]"),type:i});else o.push({name:s.name,type:i})}}return o}function a(e,r){for(var t=e.getProgramParameter(r,e.ACTIVE_ATTRIBUTES),o=[],a=0;a<t;++a){var s=e.getActiveAttrib(r,a);s&&o.push({name:s.name,type:n(e,s.type)})}return o}r.uniforms=o,r.attributes=a;var s={FLOAT:"float",FLOAT_VEC2:"vec2",FLOAT_VEC3:"vec3",FLOAT_VEC4:"vec4",INT:"int",INT_VEC2:"ivec2",INT_VEC3:"ivec3",INT_VEC4:"ivec4",BOOL:"bool",BOOL_VEC2:"bvec2",BOOL_VEC3:"bvec3",BOOL_VEC4:"bvec4",FLOAT_MAT2:"mat2",FLOAT_MAT3:"mat3",FLOAT_MAT4:"mat4",SAMPLER_2D:"sampler2D",SAMPLER_CUBE:"samplerCube"},i=null},function(e,r,t){"use strict";function n(e){v=[e.LINEAR,e.NEAREST_MIPMAP_LINEAR,e.LINEAR_MIPMAP_NEAREST,e.LINEAR_MIPMAP_NEAREST],_=[e.NEAREST,e.LINEAR,e.NEAREST_MIPMAP_NEAREST,e.NEAREST_MIPMAP_LINEAR,e.LINEAR_MIPMAP_NEAREST,e.LINEAR_MIPMAP_LINEAR],y=[e.REPEAT,e.CLAMP_TO_EDGE,e.MIRRORED_REPEAT]}function o(e){return"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement||"undefined"!=typeof ImageData&&e instanceof ImageData}function a(e,r,t){var n=e.gl,o=n.getParameter(n.MAX_TEXTURE_SIZE);if(r<0||r>o||t<0||t>o)throw new Error("gl-texture2d: Invalid texture size");return e._shape=[r,t],e.bind(),n.texImage2D(n.TEXTURE_2D,0,e.format,r,t,0,e.format,e.type,null),e._mipLevels=[0],e}function s(e,r,t,n,o,a){this.gl=e,this.handle=r,this.format=o,this.type=a,this._shape=[t,n],this._mipLevels=[0],this._magFilter=e.NEAREST,this._minFilter=e.NEAREST,this._wrapS=e.CLAMP_TO_EDGE,this._wrapT=e.CLAMP_TO_EDGE,this._anisoSamples=1;var s=this,i=[this._wrapS,this._wrapT];Object.defineProperties(i,[{get:function(){return s._wrapS},set:function(e){return s.wrapS=e}},{get:function(){return s._wrapT},set:function(e){return s.wrapT=e}}]),this._wrapVector=i;var u=[this._shape[0],this._shape[1]];Object.defineProperties(u,[{get:function(){return s._shape[0]},set:function(e){return s.width=e}},{get:function(){return s._shape[1]},set:function(e){return s.height=e}}]),this._shapeVector=u}function i(e,r){return 3===e.length?1===r[2]&&r[1]===e[0]*e[2]&&r[0]===e[2]:1===r[0]&&r[1]===e[0]}function u(e,r,t,n,o,a,s,u){var l=u.dtype,c=u.shape.slice();if(c.length<2||c.length>3)throw new Error("gl-texture2d: Invalid ndarray, must be 2d or 3d");var f=0,p=0,h=i(c,u.stride.slice());"float32"===l?f=e.FLOAT:"float64"===l?(f=e.FLOAT,h=!1,l="float32"):"uint8"===l?f=e.UNSIGNED_BYTE:(f=e.UNSIGNED_BYTE,h=!1,l="uint8");if(2===c.length)p=e.LUMINANCE,c=[c[0],c[1],1],u=g(u.data,c,[u.stride[0],u.stride[1],1],u.offset);else{if(3!==c.length)throw new Error("gl-texture2d: Invalid shape for texture");if(1===c[2])p=e.ALPHA;else if(2===c[2])p=e.LUMINANCE_ALPHA;else if(3===c[2])p=e.RGB;else{if(4!==c[2])throw new Error("gl-texture2d: Invalid shape for pixel coords");p=e.RGBA}c[2]}if(p!==e.LUMINANCE&&p!==e.ALPHA||o!==e.LUMINANCE&&o!==e.ALPHA||(p=o),p!==o)throw new Error("gl-texture2d: Incompatible texture format for setPixels");var v=u.size,_=s.indexOf(n)<0;if(_&&s.push(n),f===a&&h)0===u.offset&&u.data.length===v?_?e.texImage2D(e.TEXTURE_2D,n,o,c[0],c[1],0,o,a,u.data):e.texSubImage2D(e.TEXTURE_2D,n,r,t,c[0],c[1],o,a,u.data):_?e.texImage2D(e.TEXTURE_2D,n,o,c[0],c[1],0,o,a,u.data.subarray(u.offset,u.offset+v)):e.texSubImage2D(e.TEXTURE_2D,n,r,t,c[0],c[1],o,a,u.data.subarray(u.offset,u.offset+v));else{var y;y=a===e.FLOAT?m.mallocFloat32(v):m.mallocUint8(v);var E=g(y,c,[c[2],c[2]*c[0],1]);f===e.FLOAT&&a===e.UNSIGNED_BYTE?T(E,u):d.assign(E,u),_?e.texImage2D(e.TEXTURE_2D,n,o,c[0],c[1],0,o,a,y.subarray(0,v)):e.texSubImage2D(e.TEXTURE_2D,n,r,t,c[0],c[1],o,a,y.subarray(0,v)),a===e.FLOAT?m.freeFloat32(y):m.freeUint8(y)}}function l(e){var r=e.createTexture();return e.bindTexture(e.TEXTURE_2D,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),r}function c(e,r,t,n,o){var a=e.getParameter(e.MAX_TEXTURE_SIZE);if(r<0||r>a||t<0||t>a)throw new Error("gl-texture2d: Invalid texture shape");if(o===e.FLOAT&&!e.getExtension("OES_texture_float"))throw new Error("gl-texture2d: Floating point textures not supported on this platform");var i=l(e);return e.texImage2D(e.TEXTURE_2D,0,n,r,t,0,n,o,null),new s(e,i,r,t,n,o)}function f(e,r,t,n,o,a){var i=l(e);return e.texImage2D(e.TEXTURE_2D,0,o,o,a,r),new s(e,i,t,n,o,a)}function p(e,r){var t=r.dtype,n=r.shape.slice(),o=e.getParameter(e.MAX_TEXTURE_SIZE);if(n[0]<0||n[0]>o||n[1]<0||n[1]>o)throw new Error("gl-texture2d: Invalid texture size");var a=i(n,r.stride.slice()),u=0;"float32"===t?u=e.FLOAT:"float64"===t?(u=e.FLOAT,a=!1,t="float32"):"uint8"===t?u=e.UNSIGNED_BYTE:(u=e.UNSIGNED_BYTE,a=!1,t="uint8");var c=0;if(2===n.length)c=e.LUMINANCE,n=[n[0],n[1],1],r=g(r.data,n,[r.stride[0],r.stride[1],1],r.offset);else{if(3!==n.length)throw new Error("gl-texture2d: Invalid shape for texture");if(1===n[2])c=e.ALPHA;else if(2===n[2])c=e.LUMINANCE_ALPHA;else if(3===n[2])c=e.RGB;else{if(4!==n[2])throw new Error("gl-texture2d: Invalid shape for pixel coords");c=e.RGBA}}u!==e.FLOAT||e.getExtension("OES_texture_float")||(u=e.UNSIGNED_BYTE,a=!1);var f,p,h=r.size;if(a)f=0===r.offset&&r.data.length===h?r.data:r.data.subarray(r.offset,r.offset+h);else{var v=[n[2],n[2]*n[0],1];p=m.malloc(h,t);var _=g(p,n,v,0);"float32"!==t&&"float64"!==t||u!==e.UNSIGNED_BYTE?d.assign(_,r):T(_,r),f=p.subarray(0,h)}var y=l(e);return e.texImage2D(e.TEXTURE_2D,0,c,n[0],n[1],0,c,u,f),a||m.free(p),new s(e,y,n[0],n[1],c,u)}function h(e){if(arguments.length<=1)throw new Error("gl-texture2d: Missing arguments for texture2d constructor");if(v||n(e),"number"==typeof arguments[1])return c(e,arguments[1],arguments[2],arguments[3]||e.RGBA,arguments[4]||e.UNSIGNED_BYTE);if(Array.isArray(arguments[1]))return c(e,0|arguments[1][0],0|arguments[1][1],arguments[2]||e.RGBA,arguments[3]||e.UNSIGNED_BYTE);if("object"==typeof arguments[1]){var r=arguments[1],t=o(r)?r:r.raw;if(t)return f(e,t,0|r.width,0|r.height,arguments[2]||e.RGBA,arguments[3]||e.UNSIGNED_BYTE);if(r.shape&&r.data&&r.stride)return p(e,r)}throw new Error("gl-texture2d: Invalid arguments for texture2d constructor")}var g=t(31),d=t(34),m=t(39);e.exports=h;var v=null,_=null,y=null,T=function(e,r){d.muls(e,r,255)},E=s.prototype;Object.defineProperties(E,{minFilter:{get:function(){return this._minFilter},set:function(e){this.bind();var r=this.gl;if(this.type===r.FLOAT&&v.indexOf(e)>=0&&(r.getExtension("OES_texture_float_linear")||(e=r.NEAREST)),_.indexOf(e)<0)throw new Error("gl-texture2d: Unknown filter mode "+e);return r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,e),this._minFilter=e}},magFilter:{get:function(){return this._magFilter},set:function(e){this.bind();var r=this.gl;if(this.type===r.FLOAT&&v.indexOf(e)>=0&&(r.getExtension("OES_texture_float_linear")||(e=r.NEAREST)),_.indexOf(e)<0)throw new Error("gl-texture2d: Unknown filter mode "+e);return r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,e),this._magFilter=e}},mipSamples:{get:function(){return this._anisoSamples},set:function(e){var r=this._anisoSamples;if(this._anisoSamples=0|Math.max(e,1),r!==this._anisoSamples){var t=this.gl.getExtension("EXT_texture_filter_anisotropic");t&&this.gl.texParameterf(this.gl.TEXTURE_2D,t.TEXTURE_MAX_ANISOTROPY_EXT,this._anisoSamples)}return this._anisoSamples}},wrapS:{get:function(){return this._wrapS},set:function(e){if(this.bind(),y.indexOf(e)<0)throw new Error("gl-texture2d: Unknown wrap mode "+e);return this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,e),this._wrapS=e}},wrapT:{get:function(){return this._wrapT},set:function(e){if(this.bind(),y.indexOf(e)<0)throw new Error("gl-texture2d: Unknown wrap mode "+e);return this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,e),this._wrapT=e}},wrap:{get:function(){return this._wrapVector},set:function(e){if(Array.isArray(e)||(e=[e,e]),2!==e.length)throw new Error("gl-texture2d: Must specify wrap mode for rows and columns");for(var r=0;r<2;++r)if(y.indexOf(e[r])<0)throw new Error("gl-texture2d: Unknown wrap mode "+e);this._wrapS=e[0],this._wrapT=e[1];var t=this.gl;return this.bind(),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,this._wrapS),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,this._wrapT),e}},shape:{get:function(){return this._shapeVector},set:function(e){if(Array.isArray(e)){if(2!==e.length)throw new Error("gl-texture2d: Invalid texture shape")}else e=[0|e,0|e];return a(this,0|e[0],0|e[1]),[0|e[0],0|e[1]]}},width:{get:function(){return this._shape[0]},set:function(e){return e|=0,a(this,e,this._shape[1]),e}},height:{get:function(){return this._shape[1]},set:function(e){return e|=0,a(this,this._shape[0],e),e}}}),E.bind=function(e){var r=this.gl;return void 0!==e&&r.activeTexture(r.TEXTURE0+(0|e)),r.bindTexture(r.TEXTURE_2D,this.handle),void 0!==e?0|e:r.getParameter(r.ACTIVE_TEXTURE)-r.TEXTURE0},E.dispose=function(){this.gl.deleteTexture(this.handle)},E.generateMipmap=function(){this.bind(),this.gl.generateMipmap(this.gl.TEXTURE_2D);for(var e=Math.min(this._shape[0],this._shape[1]),r=0;e>0;++r,e>>>=1)this._mipLevels.indexOf(r)<0&&this._mipLevels.push(r)},E.setPixels=function(e,r,t,n){var a=this.gl;this.bind(),Array.isArray(r)?(n=t,t=0|r[1],r=0|r[0]):(r=r||0,t=t||0),n=n||0;var s=o(e)?e:e.raw;if(s){this._mipLevels.indexOf(n)<0?(a.texImage2D(a.TEXTURE_2D,0,this.format,this.format,this.type,s),this._mipLevels.push(n)):a.texSubImage2D(a.TEXTURE_2D,n,r,t,this.format,this.type,s)}else{if(!(e.shape&&e.stride&&e.data))throw new Error("gl-texture2d: Unsupported data type");if(e.shape.length<2||r+e.shape[1]>this._shape[1]>>>n||t+e.shape[0]>this._shape[0]>>>n||r<0||t<0)throw new Error("gl-texture2d: Texture dimensions are out of bounds");u(a,r,t,n,this.format,this.type,this._mipLevels,e)}}},function(e,r,t){function n(e,r){return e[0]-r[0]}function o(){var e,r=this.stride,t=new Array(r.length);for(e=0;e<t.length;++e)t[e]=[Math.abs(r[e]),e];t.sort(n);var o=new Array(t.length);for(e=0;e<o.length;++e)o[e]=t[e][1];return o}function a(e,r){var t=["View",r,"d",e].join("");r<0&&(t="View_Nil"+e);var n="generic"===e;if(-1===r){var a="function "+t+"(a){this.data=a;};var proto="+t+".prototype;proto.dtype='"+e+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+t+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+t+"(a){return new "+t+"(a);}",s=new Function(a);return s()}if(0===r){var a="function "+t+"(a,d) {this.data = a;this.offset = d};var proto="+t+".prototype;proto.dtype='"+e+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+t+"_copy() {return new "+t+"(this.data,this.offset)};proto.pick=function "+t+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+t+"_get(){return "+(n?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+t+"_set(v){return "+(n?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+t+"(a,b,c,d){return new "+t+"(a,d)}",s=new Function("TrivialArray",a);return s(f[e][0])}var a=["'use strict'"],i=u(r),l=i.map(function(e){return"i"+e}),c="this.offset+"+i.map(function(e){return"this.stride["+e+"]*i"+e}).join("+"),p=i.map(function(e){return"b"+e}).join(","),h=i.map(function(e){return"c"+e}).join(",");a.push("function "+t+"(a,"+p+","+h+",d){this.data=a","this.shape=["+p+"]","this.stride=["+h+"]","this.offset=d|0}","var proto="+t+".prototype","proto.dtype='"+e+"'","proto.dimension="+r),a.push("Object.defineProperty(proto,'size',{get:function "+t+"_size(){return "+i.map(function(e){return"this.shape["+e+"]"}).join("*"),"}})"),1===r?a.push("proto.order=[0]"):(a.push("Object.defineProperty(proto,'order',{get:"),r<4?(a.push("function "+t+"_order(){"),2===r?a.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):3===r&&a.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):a.push("ORDER})")),a.push("proto.set=function "+t+"_set("+l.join(",")+",v){"),n?a.push("return this.data.set("+c+",v)}"):a.push("return this.data["+c+"]=v}"),a.push("proto.get=function "+t+"_get("+l.join(",")+"){"),n?a.push("return this.data.get("+c+")}"):a.push("return this.data["+c+"]}"),a.push("proto.index=function "+t+"_index(",l.join(),"){return "+c+"}"),a.push("proto.hi=function "+t+"_hi("+l.join(",")+"){return new "+t+"(this.data,"+i.map(function(e){return["(typeof i",e,"!=='number'||i",e,"<0)?this.shape[",e,"]:i",e,"|0"].join("")}).join(",")+","+i.map(function(e){return"this.stride["+e+"]"}).join(",")+",this.offset)}");var g=i.map(function(e){return"a"+e+"=this.shape["+e+"]"}),d=i.map(function(e){return"c"+e+"=this.stride["+e+"]"});a.push("proto.lo=function "+t+"_lo("+l.join(",")+"){var b=this.offset,d=0,"+g.join(",")+","+d.join(","));for(var m=0;m<r;++m)a.push("if(typeof i"+m+"==='number'&&i"+m+">=0){d=i"+m+"|0;b+=c"+m+"*d;a"+m+"-=d}");a.push("return new "+t+"(this.data,"+i.map(function(e){return"a"+e}).join(",")+","+i.map(function(e){return"c"+e}).join(",")+",b)}"),a.push("proto.step=function "+t+"_step("+l.join(",")+"){var "+i.map(function(e){return"a"+e+"=this.shape["+e+"]"}).join(",")+","+i.map(function(e){return"b"+e+"=this.stride["+e+"]"}).join(",")+",c=this.offset,d=0,ceil=Math.ceil");for(var m=0;m<r;++m)a.push("if(typeof i"+m+"==='number'){d=i"+m+"|0;if(d<0){c+=b"+m+"*(a"+m+"-1);a"+m+"=ceil(-a"+m+"/d)}else{a"+m+"=ceil(a"+m+"/d)}b"+m+"*=d}");a.push("return new "+t+"(this.data,"+i.map(function(e){return"a"+e}).join(",")+","+i.map(function(e){return"b"+e}).join(",")+",c)}");for(var v=new Array(r),_=new Array(r),m=0;m<r;++m)v[m]="a[i"+m+"]",_[m]="b[i"+m+"]";a.push("proto.transpose=function "+t+"_transpose("+l+"){"+l.map(function(e,r){return e+"=("+e+"===undefined?"+r+":"+e+"|0)"}).join(";"),"var a=this.shape,b=this.stride;return new "+t+"(this.data,"+v.join(",")+","+_.join(",")+",this.offset)}"),a.push("proto.pick=function "+t+"_pick("+l+"){var a=[],b=[],c=this.offset");for(var m=0;m<r;++m)a.push("if(typeof i"+m+"==='number'&&i"+m+">=0){c=(c+this.stride["+m+"]*i"+m+")|0}else{a.push(this.shape["+m+"]);b.push(this.stride["+m+"])}");a.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),a.push("return function construct_"+t+"(data,shape,stride,offset){return new "+t+"(data,"+i.map(function(e){return"shape["+e+"]"}).join(",")+","+i.map(function(e){return"stride["+e+"]"}).join(",")+",offset)}");var s=new Function("CTOR_LIST","ORDER",a.join("\n"));return s(f[e],o)}function s(e){if(l(e))return"buffer";if(c)switch(Object.prototype.toString.call(e)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped"}return Array.isArray(e)?"array":"generic"}function i(e,r,t,n){if(void 0===e){var o=f.array[0];return o([])}"number"==typeof e&&(e=[e]),void 0===r&&(r=[e.length]);var i=r.length;if(void 0===t){t=new Array(i);for(var u=i-1,l=1;u>=0;--u)t[u]=l,l*=r[u]}if(void 0===n){n=0;for(var u=0;u<i;++u)t[u]<0&&(n-=(r[u]-1)*t[u])}for(var c=s(e),p=f[c];p.length<=i+1;)p.push(a(c,p.length-1));var o=p[i+1];return o(e,r,t,n)}var u=t(32),l=t(33),c="undefined"!=typeof Float64Array,f={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],buffer:[],generic:[]};e.exports=i},function(e,r,t){"use strict";function n(e){for(var r=new Array(e),t=0;t<e;++t)r[t]=t;return r}e.exports=n},function(e,r){function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function n(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(t(e)||n(e)||!!e._isBuffer)}},function(e,r,t){"use strict";function n(e){if(!e)return i;for(var r=0;r<e.args.length;++r){var t=e.args[r];e.args[r]=0===r?{name:t,lvalue:!0,rvalue:!!e.rvalue,count:e.count||1}:{name:t,lvalue:!1,rvalue:!0,count:1}}return e.thisVars||(e.thisVars=[]),e.localVars||(e.localVars=[]),e}function o(e){return s({args:e.args,pre:n(e.pre),body:n(e.body),post:n(e.proc),funcName:e.funcName})}function a(e){for(var r=[],t=0;t<e.args.length;++t)r.push("a"+t);return new Function("P",["return function ",e.funcName,"_ndarrayops(",r.join(","),") {P(",r.join(","),");return a0}"].join(""))(o(e))}var s=t(35),i={body:"",args:[],thisVars:[],localVars:[]},u={add:"+",sub:"-",mul:"*",div:"/",mod:"%",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"};!function(){for(var e in u){var t=u[e];r[e]=a({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+t+"c"},funcName:e}),r[e+"eq"]=a({args:["array","array"],body:{args:["a","b"],body:"a"+t+"=b"},rvalue:!0,funcName:e+"eq"}),r[e+"s"]=a({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+t+"s"},funcName:e+"s"}),r[e+"seq"]=a({args:["array","scalar"],body:{args:["a","s"],body:"a"+t+"=s"},rvalue:!0,funcName:e+"seq"})}}();var l={not:"!",bnot:"~",neg:"-",recip:"1.0/"};!function(){for(var e in l){var t=l[e];r[e]=a({args:["array","array"],body:{args:["a","b"],body:"a="+t+"b"},funcName:e}),r[e+"eq"]=a({args:["array"],body:{args:["a"],body:"a="+t+"a"},rvalue:!0,count:2,funcName:e+"eq"})}}();var c={and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">="};!function(){for(var e in c){var t=c[e];r[e]=a({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+t+"c"},funcName:e}),r[e+"s"]=a({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+t+"s"},funcName:e+"s"}),r[e+"eq"]=a({args:["array","array"],body:{args:["a","b"],body:"a=a"+t+"b"},rvalue:!0,count:2,funcName:e+"eq"}),r[e+"seq"]=a({args:["array","scalar"],body:{args:["a","s"],body:"a=a"+t+"s"},rvalue:!0,count:2,funcName:e+"seq"})}}();var f=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan"];!function(){for(var e=0;e<f.length;++e){var t=f[e];r[t]=a({args:["array","array"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b)",thisVars:["this_f"]},funcName:t}),r[t+"eq"]=a({args:["array"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a"],body:"a=this_f(a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:t+"eq"})}}();var p=["max","min","atan2","pow"];!function(){for(var e=0;e<p.length;++e){var t=p[e];r[t]=a({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:t}),r[t+"s"]=a({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:t+"s"}),r[t+"eq"]=a({args:["array","array"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:t+"eq"}),r[t+"seq"]=a({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:t+"seq"})}}();var h=["atan2","pow"];!function(){for(var e=0;e<h.length;++e){var t=h[e];r[t+"op"]=a({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:t+"op"}),r[t+"ops"]=a({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:t+"ops"}),r[t+"opeq"]=a({args:["array","array"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:t+"opeq"}),r[t+"opseq"]=a({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+t,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:t+"opseq"})}}(),r.any=s({args:["array"],pre:i,body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"if(a){return true}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return false"},funcName:"any"}),r.all=s({args:["array"],pre:i,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1}],body:"if(!x){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"all"}),r.sum=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s+=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"sum"}),r.prod=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=1"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s*=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"prod"}),r.norm2squared=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm2squared"}),r.norm2=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return Math.sqrt(this_s)"},funcName:"norm2"}),r.norminf=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:4}],body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norminf"}),r.norm1=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:3}],body:"this_s+=a<0?-a:a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm1"}),r.sup=s({args:["array"],pre:{body:"this_h=-Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),r.inf=s({args:["array"],pre:{body:"this_h=Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),r.argmin=s({args:["index","array","shape"],pre:{body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),r.argmax=s({args:["index","array","shape"],pre:{body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),r.random=a({args:["array"],pre:{args:[],body:"this_f=Math.random",thisVars:["this_f"]},body:{args:["a"],body:"a=this_f()",thisVars:["this_f"]},funcName:"random"}),r.assign=a({args:["array","array"],body:{args:["a","b"],body:"a=b"},funcName:"assign"}),r.assigns=a({args:["array","scalar"],body:{args:["a","b"],body:"a=b"},funcName:"assigns"}),r.equals=s({args:["array","array"],pre:i,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1},{name:"y",lvalue:!1,rvalue:!0,count:1}],body:"if(x!==y){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"equals"})},function(e,r,t){"use strict";function n(){this.argTypes=[],this.shimArgs=[],this.arrayArgs=[],this.arrayBlockIndices=[],this.scalarArgs=[],this.offsetArgs=[],this.offsetArgIndex=[],this.indexArgs=[],this.shapeArgs=[],this.funcName="",this.pre=null,this.body=null,this.post=null,this.debug=!1}function o(e){var r=new n;r.pre=e.pre,r.body=e.body,r.post=e.post;var t=e.args.slice(0);r.argTypes=t;for(var o=0;o<t.length;++o){var s=t[o];if("array"===s||"object"==typeof s&&s.blockIndices){if(r.argTypes[o]="array",r.arrayArgs.push(o),r.arrayBlockIndices.push(s.blockIndices?s.blockIndices:0),r.shimArgs.push("array"+o),o<r.pre.args.length&&r.pre.args[o].count>0)throw new Error("cwise: pre() block may not reference array args");if(o<r.post.args.length&&r.post.args[o].count>0)throw new Error("cwise: post() block may not reference array args")}else if("scalar"===s)r.scalarArgs.push(o),r.shimArgs.push("scalar"+o);else if("index"===s){if(r.indexArgs.push(o),o<r.pre.args.length&&r.pre.args[o].count>0)throw new Error("cwise: pre() block may not reference array index");if(o<r.body.args.length&&r.body.args[o].lvalue)throw new Error("cwise: body() block may not write to array index");if(o<r.post.args.length&&r.post.args[o].count>0)throw new Error("cwise: post() block may not reference array index")}else if("shape"===s){if(r.shapeArgs.push(o),o<r.pre.args.length&&r.pre.args[o].lvalue)throw new Error("cwise: pre() block may not write to array shape");if(o<r.body.args.length&&r.body.args[o].lvalue)throw new Error("cwise: body() block may not write to array shape");if(o<r.post.args.length&&r.post.args[o].lvalue)throw new Error("cwise: post() block may not write to array shape")}else{if("object"!=typeof s||!s.offset)throw new Error("cwise: Unknown argument type "+t[o]);r.argTypes[o]="offset",r.offsetArgs.push({array:s.array,offset:s.offset}),r.offsetArgIndex.push(o)}}if(r.arrayArgs.length<=0)throw new Error("cwise: No array arguments specified");if(r.pre.args.length>t.length)throw new Error("cwise: Too many arguments in pre() block");if(r.body.args.length>t.length)throw new Error("cwise: Too many arguments in body() block");if(r.post.args.length>t.length)throw new Error("cwise: Too many arguments in post() block");return r.debug=!!e.printCode||!!e.debug,r.funcName=e.funcName||"cwise",r.blockSize=e.blockSize||64,a(r)}var a=t(36);e.exports=o},function(e,r,t){"use strict";function n(e){var r=["'use strict'","var CACHED={}"],t=[],n=e.funcName+"_cwise_thunk";r.push(["return function ",n,"(",e.shimArgs.join(","),"){"].join(""));for(var a=[],s=[],i=[["array",e.arrayArgs[0],".shape.slice(",Math.max(0,e.arrayBlockIndices[0]),e.arrayBlockIndices[0]<0?","+e.arrayBlockIndices[0]+")":")"].join("")],u=[],l=[],c=0;c<e.arrayArgs.length;++c){var f=e.arrayArgs[c];t.push(["t",f,"=array",f,".dtype,","r",f,"=array",f,".order"].join("")),a.push("t"+f),a.push("r"+f),s.push("t"+f),s.push("r"+f+".join()"),i.push("array"+f+".data"),i.push("array"+f+".stride"),i.push("array"+f+".offset|0"),c>0&&(u.push("array"+e.arrayArgs[0]+".shape.length===array"+f+".shape.length+"+(Math.abs(e.arrayBlockIndices[0])-Math.abs(e.arrayBlockIndices[c]))),l.push("array"+e.arrayArgs[0]+".shape[shapeIndex+"+Math.max(0,e.arrayBlockIndices[0])+"]===array"+f+".shape[shapeIndex+"+Math.max(0,e.arrayBlockIndices[c])+"]"))}e.arrayArgs.length>1&&(r.push("if (!("+u.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"),r.push("for(var shapeIndex=array"+e.arrayArgs[0]+".shape.length-"+Math.abs(e.arrayBlockIndices[0])+"; shapeIndex--\x3e0;) {"),r.push("if (!("+l.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same shape!')"),r.push("}"));for(var c=0;c<e.scalarArgs.length;++c)i.push("scalar"+e.scalarArgs[c]);return t.push(["type=[",s.join(","),"].join()"].join("")),t.push("proc=CACHED[type]"),r.push("var "+t.join(",")),r.push(["if(!proc){","CACHED[type]=proc=compile([",a.join(","),"])}","return proc(",i.join(","),")}"].join("")),e.debug&&console.log("-----Generated thunk:\n"+r.join("\n")+"\n----------"),new Function("compile",r.join("\n"))(o.bind(void 0,e))}var o=t(37);e.exports=n},function(e,r,t){"use strict";function n(e,r,t){var n,o,a=e.length,s=r.arrayArgs.length,i=r.indexArgs.length>0,u=[],l=[],c=0,f=0;for(n=0;n<a;++n)l.push(["i",n,"=0"].join(""));for(o=0;o<s;++o)for(n=0;n<a;++n)f=c,c=e[n],0===n?l.push(["d",o,"s",n,"=t",o,"p",c].join("")):l.push(["d",o,"s",n,"=(t",o,"p",c,"-s",f,"*t",o,"p",f,")"].join(""));for(l.length>0&&u.push("var "+l.join(",")),n=a-1;n>=0;--n)c=e[n],u.push(["for(i",n,"=0;i",n,"<s",c,";++i",n,"){"].join(""));for(u.push(t),n=0;n<a;++n){for(f=c,c=e[n],o=0;o<s;++o)u.push(["p",o,"+=d",o,"s",n].join(""));i&&(n>0&&u.push(["index[",f,"]-=s",f].join("")),u.push(["++index[",c,"]"].join(""))),u.push("}")}return u.join("\n")}function o(e,r,t,o){for(var a=r.length,s=t.arrayArgs.length,i=t.blockSize,u=t.indexArgs.length>0,l=[],c=0;c<s;++c)l.push(["var offset",c,"=p",c].join(""));for(var c=e;c<a;++c)l.push(["for(var j"+c+"=SS[",r[c],"]|0;j",c,">0;){"].join("")),l.push(["if(j",c,"<",i,"){"].join("")),l.push(["s",r[c],"=j",c].join("")),l.push(["j",c,"=0"].join("")),l.push(["}else{s",r[c],"=",i].join("")),l.push(["j",c,"-=",i,"}"].join("")),u&&l.push(["index[",r[c],"]=j",c].join(""));for(var c=0;c<s;++c){for(var f=["offset"+c],p=e;p<a;++p)f.push(["j",p,"*t",c,"p",r[p]].join(""));l.push(["p",c,"=(",f.join("+"),")"].join(""))}l.push(n(r,t,o));for(var c=e;c<a;++c)l.push("}");return l.join("\n")}function a(e){for(var r=0,t=e[0].length;r<t;){for(var n=1;n<e.length;++n)if(e[n][r]!==e[0][r])return r;++r}return r}function s(e,r,t){for(var n=e.body,o=[],a=[],s=0;s<e.args.length;++s){var i=e.args[s];if(!(i.count<=0)){var u=new RegExp(i.name,"g"),l="",c=r.arrayArgs.indexOf(s);switch(r.argTypes[s]){case"offset":var f=r.offsetArgIndex.indexOf(s);c=r.offsetArgs[f].array,l="+q"+f;case"array":l="p"+c+l;var p="l"+s,h="a"+c;if(0===r.arrayBlockIndices[c])1===i.count?"generic"===t[c]?i.lvalue?(o.push(["var ",p,"=",h,".get(",l,")"].join("")),n=n.replace(u,p),a.push([h,".set(",l,",",p,")"].join(""))):n=n.replace(u,[h,".get(",l,")"].join("")):n=n.replace(u,[h,"[",l,"]"].join("")):"generic"===t[c]?(o.push(["var ",p,"=",h,".get(",l,")"].join("")),n=n.replace(u,p),i.lvalue&&a.push([h,".set(",l,",",p,")"].join(""))):(o.push(["var ",p,"=",h,"[",l,"]"].join("")),n=n.replace(u,p),i.lvalue&&a.push([h,"[",l,"]=",p].join("")));else{for(var g=[i.name],d=[l],m=0;m<Math.abs(r.arrayBlockIndices[c]);m++)g.push("\\s*\\[([^\\]]+)\\]"),d.push("$"+(m+1)+"*t"+c+"b"+m);if(u=new RegExp(g.join(""),"g"),l=d.join("+"),"generic"===t[c])throw new Error("cwise: Generic arrays not supported in combination with blocks!");n=n.replace(u,[h,"[",l,"]"].join(""))}break;case"scalar":n=n.replace(u,"Y"+r.scalarArgs.indexOf(s));break;case"index":n=n.replace(u,"index");break;case"shape":n=n.replace(u,"shape")}}}return[o.join("\n"),n,a.join("\n")].join("\n").trim()}function i(e){for(var r=new Array(e.length),t=!0,n=0;n<e.length;++n){var o=e[n],a=o.match(/\d+/);a=a?a[0]:"",0===o.charAt(0)?r[n]="u"+o.charAt(1)+a:r[n]=o.charAt(0)+a,n>0&&(t=t&&r[n]===r[n-1])}return t?r[0]:r.join("")}function u(e,r){for(var t=r[1].length-Math.abs(e.arrayBlockIndices[0])|0,u=new Array(e.arrayArgs.length),c=new Array(e.arrayArgs.length),f=0;f<e.arrayArgs.length;++f)c[f]=r[2*f],u[f]=r[2*f+1];for(var p=[],h=[],g=[],d=[],m=[],f=0;f<e.arrayArgs.length;++f){e.arrayBlockIndices[f]<0?(g.push(0),d.push(t),p.push(t),h.push(t+e.arrayBlockIndices[f])):(g.push(e.arrayBlockIndices[f]),d.push(e.arrayBlockIndices[f]+t),p.push(0),h.push(e.arrayBlockIndices[f]));for(var v=[],_=0;_<u[f].length;_++)g[f]<=u[f][_]&&u[f][_]<d[f]&&v.push(u[f][_]-g[f]);m.push(v)}for(var y=["SS"],T=["'use strict'"],E=[],_=0;_<t;++_)E.push(["s",_,"=SS[",_,"]"].join(""));for(var f=0;f<e.arrayArgs.length;++f){y.push("a"+f),y.push("t"+f),y.push("p"+f);for(var _=0;_<t;++_)E.push(["t",f,"p",_,"=t",f,"[",g[f]+_,"]"].join(""));for(var _=0;_<Math.abs(e.arrayBlockIndices[f]);++_)E.push(["t",f,"b",_,"=t",f,"[",p[f]+_,"]"].join(""))}for(var f=0;f<e.scalarArgs.length;++f)y.push("Y"+f);if(e.shapeArgs.length>0&&E.push("shape=SS.slice(0)"),e.indexArgs.length>0){for(var A=new Array(t),f=0;f<t;++f)A[f]="0";E.push(["index=[",A.join(","),"]"].join(""))}for(var f=0;f<e.offsetArgs.length;++f){for(var b=e.offsetArgs[f],x=[],_=0;_<b.offset.length;++_)0!==b.offset[_]&&(1===b.offset[_]?x.push(["t",b.array,"p",_].join("")):x.push([b.offset[_],"*t",b.array,"p",_].join("")));0===x.length?E.push("q"+f+"=0"):E.push(["q",f,"=",x.join("+")].join(""))}var I=l([].concat(e.pre.thisVars).concat(e.body.thisVars).concat(e.post.thisVars));E=E.concat(I),E.length>0&&T.push("var "+E.join(","));for(var f=0;f<e.arrayArgs.length;++f)T.push("p"+f+"|=0");e.pre.body.length>3&&T.push(s(e.pre,e,c));var R=s(e.body,e,c),w=a(m);w<t?T.push(o(w,m[0],e,R)):T.push(n(m[0],e,R)),e.post.body.length>3&&T.push(s(e.post,e,c)),e.debug&&console.log("-----Generated cwise routine for ",r,":\n"+T.join("\n")+"\n----------");var M=[e.funcName||"unnamed","_cwise_loop_",u[0].join("s"),"m",w,i(c)].join("");return new Function(["function ",M,"(",y.join(","),"){",T.join("\n"),"} return ",M].join(""))()}var l=t(38);e.exports=u},function(e,r,t){"use strict";function n(e,r){for(var t=1,n=e.length,o=e[0],a=e[0],s=1;s<n;++s)if(a=o,o=e[s],r(o,a)){if(s===t){t++;continue}e[t++]=o}return e.length=t,e}function o(e){for(var r=1,t=e.length,n=e[0],o=e[0],a=1;a<t;++a,o=n)if(o=n,(n=e[a])!==o){if(a===r){r++;continue}e[r++]=n}return e.length=r,e}function a(e,r,t){return 0===e.length?e:r?(t||e.sort(r),n(e,r)):(t||e.sort(),o(e))}e.exports=a},function(e,r,t){"use strict";(function(e,n){function o(e){if(e){var r=e.length||e.byteLength,t=_.log2(r);A[t].push(e)}}function a(e){o(e.buffer)}function s(e){var e=_.nextPow2(e),r=_.log2(e),t=A[r];return t.length>0?t.pop():new ArrayBuffer(e)}function i(e){return new Uint8Array(s(e),0,e)}function u(e){return new Uint16Array(s(2*e),0,e)}function l(e){return new Uint32Array(s(4*e),0,e)}function c(e){return new Int8Array(s(e),0,e)}function f(e){return new Int16Array(s(2*e),0,e)}function p(e){return new Int32Array(s(4*e),0,e)}function h(e){return new Float32Array(s(4*e),0,e)}function g(e){return new Float64Array(s(8*e),0,e)}function d(e){return T?new Uint8ClampedArray(s(e),0,e):i(e)}function m(e){return new DataView(s(e),0,e)}function v(e){e=_.nextPow2(e);var r=_.log2(e),t=b[r];return t.length>0?t.pop():new n(e)}var _=t(44),y=t(45);e.__TYPEDARRAY_POOL||(e.__TYPEDARRAY_POOL={UINT8:y([32,0]),UINT16:y([32,0]),UINT32:y([32,0]),INT8:y([32,0]),INT16:y([32,0]),INT32:y([32,0]),FLOAT:y([32,0]),DOUBLE:y([32,0]),DATA:y([32,0]),UINT8C:y([32,0]),BUFFER:y([32,0])});var T="undefined"!=typeof Uint8ClampedArray,E=e.__TYPEDARRAY_POOL;E.UINT8C||(E.UINT8C=y([32,0])),E.BUFFER||(E.BUFFER=y([32,0]));var A=E.DATA,b=E.BUFFER;r.free=function(e){if(n.isBuffer(e))b[_.log2(e.length)].push(e);else{if("[object ArrayBuffer]"!==Object.prototype.toString.call(e)&&(e=e.buffer),!e)return;var r=e.length||e.byteLength,t=0|_.log2(r);A[t].push(e)}},r.freeUint8=r.freeUint16=r.freeUint32=r.freeInt8=r.freeInt16=r.freeInt32=r.freeFloat32=r.freeFloat=r.freeFloat64=r.freeDouble=r.freeUint8Clamped=r.freeDataView=a,r.freeArrayBuffer=o,r.freeBuffer=function(e){b[_.log2(e.length)].push(e)},r.malloc=function(e,r){if(void 0===r||"arraybuffer"===r)return s(e);switch(r){case"uint8":return i(e);case"uint16":return u(e);case"uint32":return l(e);case"int8":return c(e);case"int16":return f(e);case"int32":return p(e);case"float":case"float32":return h(e);case"double":case"float64":return g(e);case"uint8_clamped":return d(e);case"buffer":return v(e);case"data":case"dataview":return m(e);default:return null}return null},r.mallocArrayBuffer=s,r.mallocUint8=i,r.mallocUint16=u,r.mallocUint32=l,r.mallocInt8=c,r.mallocInt16=f,r.mallocInt32=p,r.mallocFloat32=r.mallocFloat=h,r.mallocFloat64=r.mallocDouble=g,r.mallocUint8Clamped=d,r.mallocDataView=m,r.mallocBuffer=v,r.clearCache=function(){for(var e=0;e<32;++e)E.UINT8[e].length=0,E.UINT16[e].length=0,E.UINT32[e].length=0,E.INT8[e].length=0,E.INT16[e].length=0,E.INT32[e].length=0,E.FLOAT[e].length=0,E.DOUBLE[e].length=0,E.UINT8C[e].length=0,A[e].length=0,b[e].length=0}}).call(r,t(4),t(40).Buffer)},function(e,r,t){"use strict";(function(e){function n(){return a.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(e,r){if(n()<r)throw new RangeError("Invalid typed array length");return a.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(r),e.__proto__=a.prototype):(null===e&&(e=new a(r)),e.length=r),e}function a(e,r,t){if(!(a.TYPED_ARRAY_SUPPORT||this instanceof a))return new a(e,r,t);if("number"==typeof e){if("string"==typeof r)throw new Error("If encoding is specified then the first argument must be a string");return l(this,e)}return s(this,e,r,t)}function s(e,r,t,n){if("number"==typeof r)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&r instanceof ArrayBuffer?p(e,r,t,n):"string"==typeof r?c(e,r,t):h(e,r)}function i(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function u(e,r,t,n){return i(r),r<=0?o(e,r):void 0!==t?"string"==typeof n?o(e,r).fill(t,n):o(e,r).fill(t):o(e,r)}function l(e,r){if(i(r),e=o(e,r<0?0:0|g(r)),!a.TYPED_ARRAY_SUPPORT)for(var t=0;t<r;++t)e[t]=0;return e}function c(e,r,t){if("string"==typeof t&&""!==t||(t="utf8"),!a.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');var n=0|m(r,t);e=o(e,n);var s=e.write(r,t);return s!==n&&(e=e.slice(0,s)),e}function f(e,r){var t=r.length<0?0:0|g(r.length);e=o(e,t);for(var n=0;n<t;n+=1)e[n]=255&r[n];return e}function p(e,r,t,n){if(r.byteLength,t<0||r.byteLength<t)throw new RangeError("'offset' is out of bounds");if(r.byteLength<t+(n||0))throw new RangeError("'length' is out of bounds");return r=void 0===t&&void 0===n?new Uint8Array(r):void 0===n?new Uint8Array(r,t):new Uint8Array(r,t,n),a.TYPED_ARRAY_SUPPORT?(e=r,e.__proto__=a.prototype):e=f(e,r),e}function h(e,r){if(a.isBuffer(r)){var t=0|g(r.length);return e=o(e,t),0===e.length?e:(r.copy(e,0,0,t),e)}if(r){if("undefined"!=typeof ArrayBuffer&&r.buffer instanceof ArrayBuffer||"length"in r)return"number"!=typeof r.length||J(r.length)?o(e,0):f(e,r);if("Buffer"===r.type&&Q(r.data))return f(e,r.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function g(e){if(e>=n())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+n().toString(16)+" bytes");return 0|e}function d(e){return+e!=e&&(e=0),a.alloc(+e)}function m(e,r){if(a.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var t=e.length;if(0===t)return 0;for(var n=!1;;)switch(r){case"ascii":case"latin1":case"binary":return t;case"utf8":case"utf-8":case void 0:return G(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*t;case"hex":return t>>>1;case"base64":return Y(e).length;default:if(n)return G(e).length;r=(""+r).toLowerCase(),n=!0}}function v(e,r,t){var n=!1;if((void 0===r||r<0)&&(r=0),r>this.length)return"";if((void 0===t||t>this.length)&&(t=this.length),t<=0)return"";if(t>>>=0,r>>>=0,t<=r)return"";for(e||(e="utf8");;)switch(e){case"hex":return N(this,r,t);case"utf8":case"utf-8":return M(this,r,t);case"ascii":return C(this,r,t);case"latin1":case"binary":return P(this,r,t);case"base64":return w(this,r,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return U(this,r,t);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function _(e,r,t){var n=e[r];e[r]=e[t],e[t]=n}function y(e,r,t,n,o){if(0===e.length)return-1;if("string"==typeof t?(n=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),t=+t,isNaN(t)&&(t=o?0:e.length-1),t<0&&(t=e.length+t),t>=e.length){if(o)return-1;t=e.length-1}else if(t<0){if(!o)return-1;t=0}if("string"==typeof r&&(r=a.from(r,n)),a.isBuffer(r))return 0===r.length?-1:T(e,r,t,n,o);if("number"==typeof r)return r&=255,a.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,r,t):Uint8Array.prototype.lastIndexOf.call(e,r,t):T(e,[r],t,n,o);throw new TypeError("val must be string, number or Buffer")}function T(e,r,t,n,o){function a(e,r){return 1===s?e[r]:e.readUInt16BE(r*s)}var s=1,i=e.length,u=r.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||r.length<2)return-1;s=2,i/=2,u/=2,t/=2}var l;if(o){var c=-1;for(l=t;l<i;l++)if(a(e,l)===a(r,-1===c?0:l-c)){if(-1===c&&(c=l),l-c+1===u)return c*s}else-1!==c&&(l-=l-c),c=-1}else for(t+u>i&&(t=i-u),l=t;l>=0;l--){for(var f=!0,p=0;p<u;p++)if(a(e,l+p)!==a(r,p)){f=!1;break}if(f)return l}return-1}function E(e,r,t,n){t=Number(t)||0;var o=e.length-t;n?(n=Number(n))>o&&(n=o):n=o;var a=r.length;if(a%2!=0)throw new TypeError("Invalid hex string");n>a/2&&(n=a/2);for(var s=0;s<n;++s){var i=parseInt(r.substr(2*s,2),16);if(isNaN(i))return s;e[t+s]=i}return s}function A(e,r,t,n){return W(G(r,e.length-t),e,t,n)}function b(e,r,t,n){return W(H(r),e,t,n)}function x(e,r,t,n){return b(e,r,t,n)}function I(e,r,t,n){return W(Y(r),e,t,n)}function R(e,r,t,n){return W(q(r,e.length-t),e,t,n)}function w(e,r,t){return 0===r&&t===e.length?K.fromByteArray(e):K.fromByteArray(e.slice(r,t))}function M(e,r,t){t=Math.min(e.length,t);for(var n=[],o=r;o<t;){var a=e[o],s=null,i=a>239?4:a>223?3:a>191?2:1;if(o+i<=t){var u,l,c,f;switch(i){case 1:a<128&&(s=a);break;case 2:u=e[o+1],128==(192&u)&&(f=(31&a)<<6|63&u)>127&&(s=f);break;case 3:u=e[o+1],l=e[o+2],128==(192&u)&&128==(192&l)&&(f=(15&a)<<12|(63&u)<<6|63&l)>2047&&(f<55296||f>57343)&&(s=f);break;case 4:u=e[o+1],l=e[o+2],c=e[o+3],128==(192&u)&&128==(192&l)&&128==(192&c)&&(f=(15&a)<<18|(63&u)<<12|(63&l)<<6|63&c)>65535&&f<1114112&&(s=f)}}null===s?(s=65533,i=1):s>65535&&(s-=65536,n.push(s>>>10&1023|55296),s=56320|1023&s),n.push(s),o+=i}return S(n)}function S(e){var r=e.length;if(r<=$)return String.fromCharCode.apply(String,e);for(var t="",n=0;n<r;)t+=String.fromCharCode.apply(String,e.slice(n,n+=$));return t}function C(e,r,t){var n="";t=Math.min(e.length,t);for(var o=r;o<t;++o)n+=String.fromCharCode(127&e[o]);return n}function P(e,r,t){var n="";t=Math.min(e.length,t);for(var o=r;o<t;++o)n+=String.fromCharCode(e[o]);return n}function N(e,r,t){var n=e.length;(!r||r<0)&&(r=0),(!t||t<0||t>n)&&(t=n);for(var o="",a=r;a<t;++a)o+=z(e[a]);return o}function U(e,r,t){for(var n=e.slice(r,t),o="",a=0;a<n.length;a+=2)o+=String.fromCharCode(n[a]+256*n[a+1]);return o}function L(e,r,t){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+r>t)throw new RangeError("Trying to access beyond buffer length")}function F(e,r,t,n,o,s){if(!a.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(r>o||r<s)throw new RangeError('"value" argument is out of bounds');if(t+n>e.length)throw new RangeError("Index out of range")}function D(e,r,t,n){r<0&&(r=65535+r+1);for(var o=0,a=Math.min(e.length-t,2);o<a;++o)e[t+o]=(r&255<<8*(n?o:1-o))>>>8*(n?o:1-o)}function O(e,r,t,n){r<0&&(r=4294967295+r+1);for(var o=0,a=Math.min(e.length-t,4);o<a;++o)e[t+o]=r>>>8*(n?o:3-o)&255}function B(e,r,t,n,o,a){if(t+n>e.length)throw new RangeError("Index out of range");if(t<0)throw new RangeError("Index out of range")}function V(e,r,t,n,o){return o||B(e,r,t,4,3.4028234663852886e38,-3.4028234663852886e38),Z.write(e,r,t,n,23,4),t+4}function j(e,r,t,n,o){return o||B(e,r,t,8,1.7976931348623157e308,-1.7976931348623157e308),Z.write(e,r,t,n,52,8),t+8}function k(e){if(e=X(e).replace(ee,""),e.length<2)return"";for(;e.length%4!=0;)e+="=";return e}function X(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function z(e){return e<16?"0"+e.toString(16):e.toString(16)}function G(e,r){r=r||1/0;for(var t,n=e.length,o=null,a=[],s=0;s<n;++s){if((t=e.charCodeAt(s))>55295&&t<57344){if(!o){if(t>56319){(r-=3)>-1&&a.push(239,191,189);continue}if(s+1===n){(r-=3)>-1&&a.push(239,191,189);continue}o=t;continue}if(t<56320){(r-=3)>-1&&a.push(239,191,189),o=t;continue}t=65536+(o-55296<<10|t-56320)}else o&&(r-=3)>-1&&a.push(239,191,189);if(o=null,t<128){if((r-=1)<0)break;a.push(t)}else if(t<2048){if((r-=2)<0)break;a.push(t>>6|192,63&t|128)}else if(t<65536){if((r-=3)<0)break;a.push(t>>12|224,t>>6&63|128,63&t|128)}else{if(!(t<1114112))throw new Error("Invalid code point");if((r-=4)<0)break;a.push(t>>18|240,t>>12&63|128,t>>6&63|128,63&t|128)}}return a}function H(e){for(var r=[],t=0;t<e.length;++t)r.push(255&e.charCodeAt(t));return r}function q(e,r){for(var t,n,o,a=[],s=0;s<e.length&&!((r-=2)<0);++s)t=e.charCodeAt(s),n=t>>8,o=t%256,a.push(o),a.push(n);return a}function Y(e){return K.toByteArray(k(e))}function W(e,r,t,n){for(var o=0;o<n&&!(o+t>=r.length||o>=e.length);++o)r[o+t]=e[o];return o}function J(e){return e!==e}/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var K=t(41),Z=t(42),Q=t(43);r.Buffer=a,r.SlowBuffer=d,r.INSPECT_MAX_BYTES=50,a.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),r.kMaxLength=n(),a.poolSize=8192,a._augment=function(e){return e.__proto__=a.prototype,e},a.from=function(e,r,t){return s(null,e,r,t)},a.TYPED_ARRAY_SUPPORT&&(a.prototype.__proto__=Uint8Array.prototype,a.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&a[Symbol.species]===a&&Object.defineProperty(a,Symbol.species,{value:null,configurable:!0})),a.alloc=function(e,r,t){return u(null,e,r,t)},a.allocUnsafe=function(e){return l(null,e)},a.allocUnsafeSlow=function(e){return l(null,e)},a.isBuffer=function(e){return!(null==e||!e._isBuffer)},a.compare=function(e,r){if(!a.isBuffer(e)||!a.isBuffer(r))throw new TypeError("Arguments must be Buffers");if(e===r)return 0;for(var t=e.length,n=r.length,o=0,s=Math.min(t,n);o<s;++o)if(e[o]!==r[o]){t=e[o],n=r[o];break}return t<n?-1:n<t?1:0},a.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(e,r){if(!Q(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return a.alloc(0);var t;if(void 0===r)for(r=0,t=0;t<e.length;++t)r+=e[t].length;var n=a.allocUnsafe(r),o=0;for(t=0;t<e.length;++t){var s=e[t];if(!a.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(n,o),o+=s.length}return n},a.byteLength=m,a.prototype._isBuffer=!0,a.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var r=0;r<e;r+=2)_(this,r,r+1);return this},a.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var r=0;r<e;r+=4)_(this,r,r+3),_(this,r+1,r+2);return this},a.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var r=0;r<e;r+=8)_(this,r,r+7),_(this,r+1,r+6),_(this,r+2,r+5),_(this,r+3,r+4);return this},a.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?M(this,0,e):v.apply(this,arguments)},a.prototype.equals=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===a.compare(this,e)},a.prototype.inspect=function(){var e="",t=r.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,t).match(/.{2}/g).join(" "),this.length>t&&(e+=" ... ")),"<Buffer "+e+">"},a.prototype.compare=function(e,r,t,n,o){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===r&&(r=0),void 0===t&&(t=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),r<0||t>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&r>=t)return 0;if(n>=o)return-1;if(r>=t)return 1;if(r>>>=0,t>>>=0,n>>>=0,o>>>=0,this===e)return 0;for(var s=o-n,i=t-r,u=Math.min(s,i),l=this.slice(n,o),c=e.slice(r,t),f=0;f<u;++f)if(l[f]!==c[f]){s=l[f],i=c[f];break}return s<i?-1:i<s?1:0},a.prototype.includes=function(e,r,t){return-1!==this.indexOf(e,r,t)},a.prototype.indexOf=function(e,r,t){return y(this,e,r,t,!0)},a.prototype.lastIndexOf=function(e,r,t){return y(this,e,r,t,!1)},a.prototype.write=function(e,r,t,n){if(void 0===r)n="utf8",t=this.length,r=0;else if(void 0===t&&"string"==typeof r)n=r,t=this.length,r=0;else{if(!isFinite(r))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");r|=0,isFinite(t)?(t|=0,void 0===n&&(n="utf8")):(n=t,t=void 0)}var o=this.length-r;if((void 0===t||t>o)&&(t=o),e.length>0&&(t<0||r<0)||r>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var a=!1;;)switch(n){case"hex":return E(this,e,r,t);case"utf8":case"utf-8":return A(this,e,r,t);case"ascii":return b(this,e,r,t);case"latin1":case"binary":return x(this,e,r,t);case"base64":return I(this,e,r,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,e,r,t);default:if(a)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),a=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var $=4096;a.prototype.slice=function(e,r){var t=this.length;e=~~e,r=void 0===r?t:~~r,e<0?(e+=t)<0&&(e=0):e>t&&(e=t),r<0?(r+=t)<0&&(r=0):r>t&&(r=t),r<e&&(r=e);var n;if(a.TYPED_ARRAY_SUPPORT)n=this.subarray(e,r),n.__proto__=a.prototype;else{var o=r-e;n=new a(o,void 0);for(var s=0;s<o;++s)n[s]=this[s+e]}return n},a.prototype.readUIntLE=function(e,r,t){e|=0,r|=0,t||L(e,r,this.length);for(var n=this[e],o=1,a=0;++a<r&&(o*=256);)n+=this[e+a]*o;return n},a.prototype.readUIntBE=function(e,r,t){e|=0,r|=0,t||L(e,r,this.length);for(var n=this[e+--r],o=1;r>0&&(o*=256);)n+=this[e+--r]*o;return n},a.prototype.readUInt8=function(e,r){return r||L(e,1,this.length),this[e]},a.prototype.readUInt16LE=function(e,r){return r||L(e,2,this.length),this[e]|this[e+1]<<8},a.prototype.readUInt16BE=function(e,r){return r||L(e,2,this.length),this[e]<<8|this[e+1]},a.prototype.readUInt32LE=function(e,r){return r||L(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},a.prototype.readUInt32BE=function(e,r){return r||L(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},a.prototype.readIntLE=function(e,r,t){e|=0,r|=0,t||L(e,r,this.length);for(var n=this[e],o=1,a=0;++a<r&&(o*=256);)n+=this[e+a]*o;return o*=128,n>=o&&(n-=Math.pow(2,8*r)),n},a.prototype.readIntBE=function(e,r,t){e|=0,r|=0,t||L(e,r,this.length);for(var n=r,o=1,a=this[e+--n];n>0&&(o*=256);)a+=this[e+--n]*o;return o*=128,a>=o&&(a-=Math.pow(2,8*r)),a},a.prototype.readInt8=function(e,r){return r||L(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},a.prototype.readInt16LE=function(e,r){r||L(e,2,this.length);var t=this[e]|this[e+1]<<8;return 32768&t?4294901760|t:t},a.prototype.readInt16BE=function(e,r){r||L(e,2,this.length);var t=this[e+1]|this[e]<<8;return 32768&t?4294901760|t:t},a.prototype.readInt32LE=function(e,r){return r||L(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},a.prototype.readInt32BE=function(e,r){return r||L(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},a.prototype.readFloatLE=function(e,r){return r||L(e,4,this.length),Z.read(this,e,!0,23,4)},a.prototype.readFloatBE=function(e,r){return r||L(e,4,this.length),Z.read(this,e,!1,23,4)},a.prototype.readDoubleLE=function(e,r){return r||L(e,8,this.length),Z.read(this,e,!0,52,8)},a.prototype.readDoubleBE=function(e,r){return r||L(e,8,this.length),Z.read(this,e,!1,52,8)},a.prototype.writeUIntLE=function(e,r,t,n){if(e=+e,r|=0,t|=0,!n){F(this,e,r,t,Math.pow(2,8*t)-1,0)}var o=1,a=0;for(this[r]=255&e;++a<t&&(o*=256);)this[r+a]=e/o&255;return r+t},a.prototype.writeUIntBE=function(e,r,t,n){if(e=+e,r|=0,t|=0,!n){F(this,e,r,t,Math.pow(2,8*t)-1,0)}var o=t-1,a=1;for(this[r+o]=255&e;--o>=0&&(a*=256);)this[r+o]=e/a&255;return r+t},a.prototype.writeUInt8=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,1,255,0),a.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[r]=255&e,r+1},a.prototype.writeUInt16LE=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,2,65535,0),a.TYPED_ARRAY_SUPPORT?(this[r]=255&e,this[r+1]=e>>>8):D(this,e,r,!0),r+2},a.prototype.writeUInt16BE=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,2,65535,0),a.TYPED_ARRAY_SUPPORT?(this[r]=e>>>8,this[r+1]=255&e):D(this,e,r,!1),r+2},a.prototype.writeUInt32LE=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,4,4294967295,0),a.TYPED_ARRAY_SUPPORT?(this[r+3]=e>>>24,this[r+2]=e>>>16,this[r+1]=e>>>8,this[r]=255&e):O(this,e,r,!0),r+4},a.prototype.writeUInt32BE=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,4,4294967295,0),a.TYPED_ARRAY_SUPPORT?(this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=255&e):O(this,e,r,!1),r+4},a.prototype.writeIntLE=function(e,r,t,n){if(e=+e,r|=0,!n){var o=Math.pow(2,8*t-1);F(this,e,r,t,o-1,-o)}var a=0,s=1,i=0;for(this[r]=255&e;++a<t&&(s*=256);)e<0&&0===i&&0!==this[r+a-1]&&(i=1),this[r+a]=(e/s>>0)-i&255;return r+t},a.prototype.writeIntBE=function(e,r,t,n){if(e=+e,r|=0,!n){var o=Math.pow(2,8*t-1);F(this,e,r,t,o-1,-o)}var a=t-1,s=1,i=0;for(this[r+a]=255&e;--a>=0&&(s*=256);)e<0&&0===i&&0!==this[r+a+1]&&(i=1),this[r+a]=(e/s>>0)-i&255;return r+t},a.prototype.writeInt8=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,1,127,-128),a.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[r]=255&e,r+1},a.prototype.writeInt16LE=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,2,32767,-32768),a.TYPED_ARRAY_SUPPORT?(this[r]=255&e,this[r+1]=e>>>8):D(this,e,r,!0),r+2},a.prototype.writeInt16BE=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,2,32767,-32768),a.TYPED_ARRAY_SUPPORT?(this[r]=e>>>8,this[r+1]=255&e):D(this,e,r,!1),r+2},a.prototype.writeInt32LE=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,4,2147483647,-2147483648),a.TYPED_ARRAY_SUPPORT?(this[r]=255&e,this[r+1]=e>>>8,this[r+2]=e>>>16,this[r+3]=e>>>24):O(this,e,r,!0),r+4},a.prototype.writeInt32BE=function(e,r,t){return e=+e,r|=0,t||F(this,e,r,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),a.TYPED_ARRAY_SUPPORT?(this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=255&e):O(this,e,r,!1),r+4},a.prototype.writeFloatLE=function(e,r,t){return V(this,e,r,!0,t)},a.prototype.writeFloatBE=function(e,r,t){return V(this,e,r,!1,t)},a.prototype.writeDoubleLE=function(e,r,t){return j(this,e,r,!0,t)},a.prototype.writeDoubleBE=function(e,r,t){return j(this,e,r,!1,t)},a.prototype.copy=function(e,r,t,n){if(t||(t=0),n||0===n||(n=this.length),r>=e.length&&(r=e.length),r||(r=0),n>0&&n<t&&(n=t),n===t)return 0;if(0===e.length||0===this.length)return 0;if(r<0)throw new RangeError("targetStart out of bounds");if(t<0||t>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-r<n-t&&(n=e.length-r+t);var o,s=n-t;if(this===e&&t<r&&r<n)for(o=s-1;o>=0;--o)e[o+r]=this[o+t];else if(s<1e3||!a.TYPED_ARRAY_SUPPORT)for(o=0;o<s;++o)e[o+r]=this[o+t];else Uint8Array.prototype.set.call(e,this.subarray(t,t+s),r);return s},a.prototype.fill=function(e,r,t,n){if("string"==typeof e){if("string"==typeof r?(n=r,r=0,t=this.length):"string"==typeof t&&(n=t,t=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!a.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);if(r<0||this.length<r||this.length<t)throw new RangeError("Out of range index");if(t<=r)return this;r>>>=0,t=void 0===t?this.length:t>>>0,e||(e=0);var s;if("number"==typeof e)for(s=r;s<t;++s)this[s]=e;else{var i=a.isBuffer(e)?e:G(new a(e,n).toString()),u=i.length;for(s=0;s<t-r;++s)this[s+r]=i[s%u]}return this};var ee=/[^+\/0-9A-Za-z-_]/g}).call(r,t(4))},function(e,r,t){"use strict";function n(e){var r=e.length;if(r%4>0)throw new Error("Invalid string. Length must be a multiple of 4");return"="===e[r-2]?2:"="===e[r-1]?1:0}function o(e){return 3*e.length/4-n(e)}function a(e){var r,t,o,a,s,i=e.length;a=n(e),s=new f(3*i/4-a),t=a>0?i-4:i;var u=0;for(r=0;r<t;r+=4)o=c[e.charCodeAt(r)]<<18|c[e.charCodeAt(r+1)]<<12|c[e.charCodeAt(r+2)]<<6|c[e.charCodeAt(r+3)],s[u++]=o>>16&255,s[u++]=o>>8&255,s[u++]=255&o;return 2===a?(o=c[e.charCodeAt(r)]<<2|c[e.charCodeAt(r+1)]>>4,s[u++]=255&o):1===a&&(o=c[e.charCodeAt(r)]<<10|c[e.charCodeAt(r+1)]<<4|c[e.charCodeAt(r+2)]>>2,s[u++]=o>>8&255,s[u++]=255&o),s}function s(e){return l[e>>18&63]+l[e>>12&63]+l[e>>6&63]+l[63&e]}function i(e,r,t){for(var n,o=[],a=r;a<t;a+=3)n=(e[a]<<16)+(e[a+1]<<8)+e[a+2],o.push(s(n));return o.join("")}function u(e){for(var r,t=e.length,n=t%3,o="",a=[],s=0,u=t-n;s<u;s+=16383)a.push(i(e,s,s+16383>u?u:s+16383));return 1===n?(r=e[t-1],o+=l[r>>2],o+=l[r<<4&63],o+="=="):2===n&&(r=(e[t-2]<<8)+e[t-1],o+=l[r>>10],o+=l[r>>4&63],o+=l[r<<2&63],o+="="),a.push(o),a.join("")}r.byteLength=o,r.toByteArray=a,r.fromByteArray=u;for(var l=[],c=[],f="undefined"!=typeof Uint8Array?Uint8Array:Array,p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",h=0,g=p.length;h<g;++h)l[h]=p[h],c[p.charCodeAt(h)]=h;c["-".charCodeAt(0)]=62,c["_".charCodeAt(0)]=63},function(e,r){r.read=function(e,r,t,n,o){var a,s,i=8*o-n-1,u=(1<<i)-1,l=u>>1,c=-7,f=t?o-1:0,p=t?-1:1,h=e[r+f];for(f+=p,a=h&(1<<-c)-1,h>>=-c,c+=i;c>0;a=256*a+e[r+f],f+=p,c-=8);for(s=a&(1<<-c)-1,a>>=-c,c+=n;c>0;s=256*s+e[r+f],f+=p,c-=8);if(0===a)a=1-l;else{if(a===u)return s?NaN:1/0*(h?-1:1);s+=Math.pow(2,n),a-=l}return(h?-1:1)*s*Math.pow(2,a-n)},r.write=function(e,r,t,n,o,a){var s,i,u,l=8*a-o-1,c=(1<<l)-1,f=c>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:a-1,g=n?1:-1,d=r<0||0===r&&1/r<0?1:0;for(r=Math.abs(r),isNaN(r)||r===1/0?(i=isNaN(r)?1:0,s=c):(s=Math.floor(Math.log(r)/Math.LN2),r*(u=Math.pow(2,-s))<1&&(s--,u*=2),r+=s+f>=1?p/u:p*Math.pow(2,1-f),r*u>=2&&(s++,u/=2),s+f>=c?(i=0,s=c):s+f>=1?(i=(r*u-1)*Math.pow(2,o),s+=f):(i=r*Math.pow(2,f-1)*Math.pow(2,o),s=0));o>=8;e[t+h]=255&i,h+=g,i/=256,o-=8);for(s=s<<o|i,l+=o;l>0;e[t+h]=255&s,h+=g,s/=256,l-=8);e[t+h-g]|=128*d}},function(e,r){var t={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==t.call(e)}},function(e,r,t){"use strict";"use restrict";function n(e){var r=32;return e&=-e,e&&r--,65535&e&&(r-=16),16711935&e&&(r-=8),252645135&e&&(r-=4),858993459&e&&(r-=2),1431655765&e&&(r-=1),r}r.INT_BITS=32,r.INT_MAX=2147483647,r.INT_MIN=-1<<31,r.sign=function(e){return(e>0)-(e<0)},r.abs=function(e){var r=e>>31;return(e^r)-r},r.min=function(e,r){return r^(e^r)&-(e<r)},r.max=function(e,r){return e^(e^r)&-(e<r)},r.isPow2=function(e){return!(e&e-1||!e)},r.log2=function(e){var r,t;return r=(e>65535)<<4,e>>>=r,t=(e>255)<<3,e>>>=t,r|=t,t=(e>15)<<2,e>>>=t,r|=t,t=(e>3)<<1,e>>>=t,(r|=t)|e>>1},r.log10=function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},r.popCount=function(e){return e-=e>>>1&1431655765,16843009*((e=(858993459&e)+(e>>>2&858993459))+(e>>>4)&252645135)>>>24},r.countTrailingZeros=n,r.nextPow2=function(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)+1},r.prevPow2=function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},r.parity=function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1};var o=new Array(256);!function(e){for(var r=0;r<256;++r){var t=r,n=r,o=7;for(t>>>=1;t;t>>>=1)n<<=1,n|=1&t,--o;e[r]=n<<o&255}}(o),r.reverse=function(e){return o[255&e]<<24|o[e>>>8&255]<<16|o[e>>>16&255]<<8|o[e>>>24&255]},r.interleave2=function(e,r){return e&=65535,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),r&=65535,r=16711935&(r|r<<8),r=252645135&(r|r<<4),r=858993459&(r|r<<2),r=1431655765&(r|r<<1),e|r<<1},r.deinterleave2=function(e,r){return e=e>>>r&1431655765,e=858993459&(e|e>>>1),e=252645135&(e|e>>>2),e=16711935&(e|e>>>4),(e=65535&(e|e>>>16))<<16>>16},r.interleave3=function(e,r,t){return e&=1023,e=4278190335&(e|e<<16),e=251719695&(e|e<<8),e=3272356035&(e|e<<4),e=1227133513&(e|e<<2),r&=1023,r=4278190335&(r|r<<16),r=251719695&(r|r<<8),r=3272356035&(r|r<<4),r=1227133513&(r|r<<2),e|=r<<1,t&=1023,t=4278190335&(t|t<<16),t=251719695&(t|t<<8),t=3272356035&(t|t<<4),t=1227133513&(t|t<<2),e|t<<2},r.deinterleave3=function(e,r){return e=e>>>r&1227133513,e=3272356035&(e|e>>>2),e=251719695&(e|e>>>4),e=4278190335&(e|e>>>8),(e=1023&(e|e>>>16))<<22>>22},r.nextCombination=function(e){var r=e|e-1;return r+1|(~r&-~r)-1>>>n(e)+1}},function(e,r,t){"use strict";function n(e,r,t){var o=0|e[t];if(o<=0)return[];var a,s=new Array(o);if(t===e.length-1)for(a=0;a<o;++a)s[a]=r;else for(a=0;a<o;++a)s[a]=n(e,r,t+1);return s}function o(e,r){var t,n;for(t=new Array(e),n=0;n<e;++n)t[n]=r;return t}function a(e,r){switch(void 0===r&&(r=0),typeof e){case"number":if(e>0)return o(0|e,r);break;case"object":if("number"==typeof e.length)return n(e,r,0)}return[]}e.exports=a}]);
//# sourceMappingURL=index.js.map?65572895